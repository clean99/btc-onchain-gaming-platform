openapi: 3.0.3
info:
  title: UniSat Wallet - OpenAPI
  version: 1.0.4
  description: This is UniSat Wallet Open API. If you wish to use the OpenAPI, please feel free to send us an email, and we will provide you with an API KEY.
  contact:
    email: contact@unisat.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://open-api-fractal.unisat.io
    description: Mainnet endpoint for public.
  - url: https://open-api-fractal-testnet.unisat.io
    description: Testnet endpoint for public.
tags:
  - name: Fractal
    description: Fractal Only
  - name: Blocks
    description: Blocks
  - name: Transactions
    description: Transactions
  - name: Addresses
    description: Addresses
  - name: Inscriptions
    description: Inscriptions (https://docs.ordinals.com/inscriptions.html)
  - name: BRC-20
    description: BRC-20 (https://domo-2.gitbook.io/brc-20-experiment)
  - name: Runes
    description: Runes (https://docs.ordinals.com/runes.html)
  - name: Inscribe
    description: Inscribe Service
  - name: BRC20-Swap
    description: BRC20-swap Service
  - name: MarketPlace-BRC20
    description: BRC20 MarketPlace Service
  - name: MarketPlace-Collection
    description: Collection MarketPlace Service
  - name: MarketPlace-Domain
    description: Domain MarketPlace Service
  - name: Collection-Indexer
    description: Collection Indexer Service
paths:
  /v1/public/fractal/supply:
    get:
      tags:
        - Fractal
      summary: Get circulating FB in fractal mainnet
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                  msg:
                    type: string
                    example: OK
                  data:
                    $ref: "#/components/schemas/FractalSupply"
        "401":
          description: Invalid API Key
  /v1/public/fractal/total-supply:
    get:
      tags:
        - Fractal
      summary: Get total supply FB in fractal mainnet
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                  msg:
                    type: string
                    example: OK
                  data:
                    $ref: "#/components/schemas/FractalSupply"
        "401":
          description: Invalid API Key
  /v1/public/address/total:
    get:
      tags:
        - Fractal
      summary: Get total address
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                  msg:
                    type: string
                    example: OK
                  data:
                    type: number
        "401":
          description: Invalid API Key
  /v1/public/address/rich-list:
    get:
      tags:
        - Fractal
      summary: Return the address list in descending order of amount.
      parameters:
        - name: cursor
          description: Start offset
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: size
          description: Number of items returned (Max 10000)
          in: query
          required: true
          schema:
            type: integer
          example: 16
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                  msg:
                    type: string
                    example: OK
                  data:
                    $ref: "#/components/schemas/AddressBalance"
        "401":
          description: Invalid API Key
  /v2/inscribe/order/summary:
    get:
      tags:
        - Inscribe
      summary: Get order summary of current apikey
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                  msg:
                    type: string
                    example: OK
                  data:
                    $ref: "#/components/schemas/OrderSummary"
        "401":
          description: Invalid API Key
  /v2/inscribe/order/list:
    get:
      tags:
        - Inscribe
      description: Get order list of current apikey
      parameters:
        - name: cursor
          description: Start offset
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: size
          description: Number of items returned
          in: query
          required: true
          schema:
            type: integer
          example: 16
        - name: sort
          description: Sort by (asc/desc)
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          example: asc
        - name: status
          description: Status of order
          in: query
          required: false
          schema:
            type: string
            enum:
              - pending
              - inscribing
              - minted
              - closed
              - refunded
        - name: receiveAddress
          description: ReceiveAddress of order
          in: query
          required: false
          schema:
            type: string
        - name: clientId
          description: ClientId of order
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      detail:
                        type: array
                        items:
                          $ref: "#/components/schemas/Order"
                      start:
                        type: integer
                      total:
                        type: integer
        "401":
          description: Invalid API Key

  /v2/inscribe/order/{orderId}:
    get:
      tags:
        - Inscribe
      summary: Search an order by orderId
      description: |-
        It's recommended to query the latest status every 10 seconds.

        _amount = outputValue*count + minerFee + serviceFee + devFee_
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                  msg:
                    type: string
                    example: OK
                  data:
                    $ref: "#/components/schemas/Order"
        "401":
          description: Invalid API Key
  /v2/inscribe/order/create:
    post:
      tags:
        - Inscribe
      summary: Create an order
      description: Create an order to inscribe something
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderCreateParams"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                  msg:
                    type: string
                  data:
                    $ref: "#/components/schemas/Order"
        "401":
          description: Invalid API Key
  /v2/inscribe/order/create/brc20-deploy:
    post:
      tags:
        - Inscribe
      summary: Create an order to inscribe BRC-20 DEPLOY
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderCreateBRC20DeployParams"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                  msg:
                    type: string
                  data:
                    $ref: "#/components/schemas/Order"
        "401":
          description: Invalid API Key
  /v2/inscribe/order/create/brc20-mint:
    post:
      tags:
        - Inscribe
      summary: Create an order to inscribe BRC-20 MINT
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderCreateBRC20MintParams"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                  msg:
                    type: string
                  data:
                    $ref: "#/components/schemas/Order"
        "401":
          description: Invalid API Key
  /v2/inscribe/order/create/brc20-transfer:
    post:
      tags:
        - Inscribe
      summary: Create an order to inscribe BRC-20 TRANSFER
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderCreateBRC20TransferParams"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                  msg:
                    type: string
                  data:
                    $ref: "#/components/schemas/Order"
        "401":
          description: Invalid API Key
  /v2/inscribe/order/create/brc20-5byte-mint:
    post:
      tags:
        - Inscribe
      summary: Create an order to inscribe BRC-20 MINT
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderCreateBRC205ByteMintParams"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                  msg:
                    type: string
                  data:
                    $ref: "#/components/schemas/Order"
        "401":
          description: Invalid API Key
  /v2/inscribe/order/request-commit/brc20-5byte-mint:
    post:
      tags:
        - Inscribe
      summary: Request commit txs of brc20-5byte-mint
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderRequestCommitBRC205ByteMintParams"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                  msg:
                    type: string
                  data:
                    $ref: "#/components/schemas/OrderRequestCommitBRC205ByteMintResponse"
        "401":
          description: Invalid API Key
  /v2/inscribe/order/sign-commit/brc20-5byte-mint:
    post:
      tags:
        - Inscribe
      summary: Sign commit txs of brc20-5byte-mint
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderSignCommitBRC205ByteMintParams"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                  msg:
                    type: string
                  data:
                    $ref: "#/components/schemas/OrderSignCommitBRC205ByteMintResponse"
        "401":
          description: Invalid API Key
  /v2/inscribe/order/sign-reveal/brc20-5byte-mint:
    post:
      tags:
        - Inscribe
      summary: Sign reveal txs of brc20-5byte-mint
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderSignRevealBRC205ByteMintParams"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                  msg:
                    type: string
                  data:
                    $ref: "#/components/schemas/OrderSignRevealBRC205ByteMintResponse"
        "401":
          description: Invalid API Key
  /v2/inscribe/order/create/runes-etch:
    post:
      tags:
        - Inscribe
      summary: Create an order to etch Runes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderCreateRunesEtchParams"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                  msg:
                    type: string
                  data:
                    $ref: "#/components/schemas/Order"
        "401":
          description: Invalid API Key
  /v2/inscribe/order/create/runes-mint:
    post:
      tags:
        - Inscribe
      summary: Create an order to mint Runes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderCreateRunesMintParams"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                  msg:
                    type: string
                  data:
                    $ref: "#/components/schemas/Order"
        "401":
          description: Invalid API Key

  /v2/inscribe/order/{orderId}/refund:
    post:
      tags:
        - Inscribe
      summary: Process a refund for an order.
      description: >-
        When the amount paid by the user includes inscriptions, inscribing
        cannot be performed. Refund can be requested through this method.
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refundFeeRate:
                  type: number
                  format: float
                  example: 1
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      txid:
                        type: string
                        description: txid of refunded transaction
        "401":
          description: Invalid API Key
  /v2/inscribe/order/{orderId}/refund-estimate:
    post:
      tags:
        - Inscribe
      summary: Estimate the size of the refund transaction
      description: >-
        RefundAmount = PaidAmount - RefundTxSize * RefundFeeRate. This value
        must be greater than SafeRefundAmount, otherwise there's a risk of
        losing inscriptions used for payment due to errors.
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      paidAmount:
                        type: integer
                        format: int32
                      refundTxSize:
                        type: integer
                        format: int32
                        description: The refund amount = size * refundFeeRate
                      safeRefundAmount:
                        type: integer
                        format: int32
        "401":
          description: Invalid API Key
  /v1/indexer/blockchain/info:
    get:
      tags:
        - Blocks
      description: Get blockchain info.
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      chain:
                        type: string
                      blocks:
                        type: integer
                      headers:
                        type: integer
                      bestBlockHash:
                        type: string
                      prevBlockHash:
                        type: string
                      medianTime:
                        type: integer
                      chainwork:
                        type: string
        "401":
          description: Invalid API Key
  /v1/indexer/height/{height}/block:
    get:
      tags:
        - Blocks
      description: Get block info by block height.
      parameters:
        - name: height
          description: Block height
          in: path
          required: true
          schema:
            type: integer
          example: 1
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    $ref: "#/components/schemas/BlockInfo"
        "401":
          description: Invalid API Key
  /v1/indexer/block/id/{blockid}:
    get:
      tags:
        - Blocks
      description: Get block info by blockid.
      parameters:
        - name: blockid
          description: Block id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    $ref: "#/components/schemas/BlockInfo"
        "401":
          description: Invalid API Key
  /v1/indexer/block/{height}/txs:
    get:
      tags:
        - Blocks
      description: Get tx history by block height.
      parameters:
        - name: height
          description: Block height
          in: path
          required: true
          schema:
            type: integer
          example: 800000
        - name: cursor
          description: Start offset
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: size
          description: Number of items returned
          in: query
          required: true
          schema:
            type: integer
          example: 16
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      detail:
                        type: array
                        items:
                          $ref: "#/components/schemas/TxHistoryItem"
                      start:
                        type: integer
                      total:
                        type: integer
        "401":
          description: Invalid API Key
  /v1/indexer/tx/{txid}:
    get:
      tags:
        - Transactions
      description: Get the summary info of a tx.
      parameters:
        - name: txid
          description: Tx id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    $ref: "#/components/schemas/TxHistoryItem"
        "401":
          description: Invalid API Key
  /v1/indexer/tx/{txid}/ins:
    get:
      tags:
        - Transactions
      description: Get the inputs of a tx.
      parameters:
        - name: txid
          description: Tx id
          in: path
          required: true
          schema:
            type: string
        - name: cursor
          description: Start offset
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: size
          description: Number of items returned
          in: query
          required: true
          schema:
            type: integer
          example: 16
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      address:
                        type: string
                      codeType:
                        description: >-
                          0~3: Reserved , 4: CodeType_P2PK, 5: CodeType_P2PKH,
                          6: CodeType_P2SH, 7: CodeType_P2WPKH, 8:
                          CodeType_P2WSH, 9: CodeType_P2TR
                        type: integer
                        enum:
                          - 0
                          - 1
                          - 2
                          - 3
                          - 4
                          - 5
                          - 6
                          - 7
                          - 8
                          - 9
                      inscriptions:
                        type: array
                        items:
                          $ref: "#/components/schemas/InscriptionItem"
                      satoshi:
                        type: integer
                      scriptPk:
                        type: string
                      scriptSig:
                        type: string
                      scriptType:
                        type: string
                      scriptWits:
                        type: string
                      sequence:
                        type: integer
                      height:
                        type: integer
                      txid:
                        type: string
                      idx:
                        type: integer
                      heightTxo:
                        type: integer
                      utxid:
                        type: string
                      vout:
                        type: integer
        "401":
          description: Invalid API Key
  /v1/indexer/tx/{txid}/outs:
    get:
      tags:
        - Transactions
      description: Get the outputs of a tx.
      parameters:
        - name: txid
          description: Tx id
          in: path
          required: true
          schema:
            type: string
        - name: cursor
          description: Start offset
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: size
          description: Number of items returned
          in: query
          required: true
          schema:
            type: integer
          example: 16
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      address:
                        type: string
                      codeType:
                        type: integer
                      inscriptions:
                        type: array
                        items:
                          $ref: "#/components/schemas/InscriptionItem"
                      satoshi:
                        type: integer
                      scriptPk:
                        type: string
                      scriptType:
                        type: string
                      height:
                        type: integer
                      txid:
                        type: string
                      idx:
                        type: integer
                      heightSpent:
                        type: integer
                      txidSpent:
                        type: string
                      vout:
                        type: integer
        "401":
          description: Invalid API Key
  /v1/indexer/rawtx/{txid}:
    get:
      tags:
        - Transactions
      description: Get the rawtx of a tx.
      parameters:
        - name: txid
          description: Tx id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    type: string
        "401":
          description: Invalid API Key

  /v1/indexer/utxo/{txid}/{index}:
    get:
      tags:
        - Transactions
      description: Get the utxo info
      parameters:
        - name: txid
          description: Tx id
          in: path
          required: true
          schema:
            type: string
        - name: index
          description: Tx id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    type: object
                    properties:
                      txid:
                        type: string
                      vout:
                        type: integer
                        example: 0
                      satoshi:
                        type: integer
                        example: 10000
                      scriptType:
                        type: string
                      scriptPk:
                        type: string
                      codeType:
                        type: integer
                      address:
                        type: string
                      height:
                        type: integer
                      idx:
                        type: integer
                      inscriptions:
                        type: array
                        items:
                          $ref: "#/components/schemas/InscriptionItem"
                      isOpInRBF:
                        type: boolean
                        example: false
                      isSpent:
                        type: boolean
                        example: false

        "401":
          description: Invalid API Key

  /v1/indexer/local_pushtx:
    post:
      tags:
        - Transactions
      description: Push rawtx to bitcoin node.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocalPushParams"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    type: string
        "401":
          description: Invalid API Key

  /v1/indexer/local_pushtxs:
    post:
      tags:
        - Transactions
      description: Push rawtx to bitcoin node.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocalPushtxsParams"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    type: array
                    items:
                      type: string
        "401":
          description: Invalid API Key

  /v1/indexer/address/{address}/balance:
    get:
      tags:
        - Addresses
      description: Get balance by address.
      parameters:
        - name: address
          description: Address
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      address:
                        type: string
                      satoshi:
                        type: integer
                      pendingSatoshi:
                        type: integer
                      utxoCount:
                        type: integer
                      btcSatoshi:
                        type: integer
                      btcPendingSatoshi:
                        type: integer
                      btcUtxoCount:
                        type: integer
                      inscriptionSatoshi:
                        type: integer
                      inscriptionPendingSatoshi:
                        type: integer
                      inscriptionUtxoCount:
                        type: integer
        "401":
          description: Invalid API Key
  /v1/indexer/address/{address}/history:
    get:
      tags:
        - Addresses
      description: Get the tx history by address.
      parameters:
        - name: address
          description: Address
          in: path
          required: true
          schema:
            type: string
        - name: cursor
          description: Start offset
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: size
          description: Number of items returned
          in: query
          required: true
          schema:
            type: integer
          example: 16
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      detail:
                        type: array
                        items:
                          $ref: "#/components/schemas/TxHistoryItem"
                      start:
                        type: integer
                      total:
                        type: integer
        "401":
          description: Invalid API Key
  /v1/indexer/address/{address}/utxo-data:
    get:
      tags:
        - Addresses
      summary: Get non inscription UTXO list by address
      parameters:
        - name: address
          description: Address
          in: path
          required: true
          schema:
            type: string
        - name: cursor
          description: Start offset
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: size
          description: Number of items returned
          in: query
          required: true
          schema:
            type: integer
          example: 16
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      cursor:
                        type: integer
                      total:
                        type: integer
                      totalConfirmed:
                        type: integer
                      totalUnconfirmed:
                        type: integer
                      totalUnconfirmedSpend:
                        type: integer
                      utxo:
                        type: array
                        items:
                          $ref: "#/components/schemas/UTXO"
        "401":
          description: Invalid API Key
  /v1/indexer/address/{address}/inscription-utxo-data:
    get:
      tags:
        - Addresses
      summary: Get inscription UTXO list by address
      parameters:
        - name: address
          description: Address
          in: path
          required: true
          schema:
            type: string
        - name: cursor
          description: Start offset
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: size
          description: Number of items returned
          in: query
          required: true
          schema:
            type: integer
          example: 16
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      cursor:
                        type: integer
                      total:
                        type: integer
                      totalConfirmed:
                        type: integer
                      totalUnconfirmed:
                        type: integer
                      totalUnconfirmedSpend:
                        type: integer
                      utxo:
                        type: array
                        items:
                          $ref: "#/components/schemas/UTXO"
        "401":
          description: Invalid API Key

  /v1/indexer/inscription/info/{inscriptionid}:
    get:
      tags:
        - Inscriptions
      description: Get inscription info by inscriptionId
      parameters:
        - name: inscriptionid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      address:
                        type: string
                      brc20:
                        description: Only BRC20 transfer have this value
                        type: object
                        properties:
                          amt:
                            type: string
                          decimal:
                            type: string
                          lim:
                            type: string
                          max:
                            type: string
                          minted:
                            type: string
                          op:
                            type: string
                          tick:
                            type: string
                          to:
                            type: string
                      contentBody:
                        description: Only text type have this value
                        type: string
                      contentLength:
                        type: integer
                      contentType:
                        type: string
                      height:
                        type: integer
                      inSatoshi:
                        type: integer
                      outSatoshi:
                        type: integer
                      inscriptionId:
                        type: string
                      inscriptionIndex:
                        type: integer
                      inscriptionNumber:
                        type: integer
                      offset:
                        type: integer
                      timestamp:
                        type: integer
                      utxo:
                        type: object
                        properties:
                          address:
                            type: string
                          codeType:
                            type: integer
                          height:
                            type: integer
                          idx:
                            type: integer
                          inscriptions:
                            type: array
                            items:
                              $ref: "#/components/schemas/InscriptionItem"
                          isOpInRBF:
                            type: boolean
                            example: false
                          satoshi:
                            type: integer
                            example: 10000
                          scriptPk:
                            type: string
                          scriptType:
                            type: string
                          txid:
                            type: string
                          vout:
                            type: integer
                            example: 0
        "401":
          description: Invalid API Key
  /v1/indexer/inscription/content/{inscriptionid}:
    get:
      tags:
        - Inscriptions
      description: Get inscription content info by inscriptionId
      parameters:
        - name: inscriptionid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content: {}
        "401":
          description: Invalid API Key
  /v1/indexer/inscription/events:
    get:
      tags:
        - Inscriptions
      description: Get inscription events
      parameters:
        - name: start
          description: Start blockheight
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: end
          description: End blockheight (0 represents the inclusion of mempool data.)
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: cursor
          description: Start offset
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: size
          description: Number of items returned
          in: query
          required: true
          schema:
            type: integer
          example: 16
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      cursor:
                        type: integer
                      total:
                        type: integer
                      detail:
                        type: array
                        items:
                          $ref: "#/components/schemas/InscriptionEvent"
        "401":
          description: Invalid API Key
  /v1/indexer/address/{address}/inscription-data:
    get:
      tags:
        - Addresses
      summary: Get inscription UTXO list by address
      parameters:
        - name: address
          description: Address
          in: path
          required: true
          schema:
            type: string
        - name: cursor
          description: Start offset
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: size
          description: Number of items returned
          in: query
          required: true
          schema:
            type: integer
          example: 16
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      cursor:
                        type: integer
                      total:
                        type: integer
                      totalConfirmed:
                        type: integer
                      totalUnconfirmed:
                        type: integer
                      totalUnconfirmedSpend:
                        type: integer
                      inscription:
                        type: array
                        items:
                          $ref: "#/components/schemas/InscriptionData"
        "401":
          description: Invalid API Key

  /v1/indexer/brc20/bestheight:
    get:
      tags:
        - BRC-20
      summary: Get the best block height of BRC20 data.
      description: >-
        Get the best block height of BRC20 data. This value will be consistent
        with the latest block height a short time after the block has been
        confirmed.
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      height:
                        description: best block height of brc20
                        type: integer
                      total:
                        description: total number of brc20 tickers
                        type: integer
        "401":
          description: Invalid API Key

  /v1/indexer/brc20/list:
    get:
      tags:
        - BRC-20
      description: Get the tiker list of BRC20 token.
      parameters:
        - name: start
          description: Start offset
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: limit
          description: Number of inscriptions returned
          in: query
          required: true
          schema:
            type: integer
          example: 16
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      detail:
                        items:
                          type: string
                      start:
                        type: integer
                      total:
                        type: integer
        "401":
          description: Invalid API Key
  /v1/indexer/brc20/status:
    get:
      tags:
        - BRC-20
      description: >-
        Obtain BRC20 list status
      parameters:
        - name: start
          description: Start offset
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: limit
          description: Number of inscriptions returned
          in: query
          required: true
          schema:
            type: integer
          example: 16
        - name: sort
          description: sort by (holders/deploy/minted/transactions)
          in: query
          required: false
          schema:
            type: string
            enum:
              - holders
              - deploy
              - minted
              - transactions
          example: "deploy"
        - name: complete
          description: filter by (completed or not)
          in: query
          required: false
          schema:
            type: string
            enum:
              - yes
              - no
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      height:
                        type: integer
                      start:
                        type: integer
                      total:
                        type: integer
                      detail:
                        type: array
                        items:
                          $ref: "#/components/schemas/BRC20InfoItem"
        "401":
          description: Invalid API Key

  /v1/indexer/brc20/{ticker}/info:
    get:
      tags:
        - BRC-20
      description: Get the infomation of BRC20 by ticker.
      parameters:
        - name: ticker
          description: Token ticker
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    $ref: "#/components/schemas/BRC20InfoItem"

        "401":
          description: Invalid API Key
  /v1/indexer/brc20/{ticker}/holders:
    get:
      tags:
        - BRC-20
      description: Get the holders of BRC20 by ticker.
      parameters:
        - name: ticker
          description: Token ticker
          in: path
          required: true
          schema:
            type: string
        - name: start
          description: Start offset
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: limit
          description: Number of returned
          in: query
          required: true
          schema:
            type: integer
          example: 16
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    type: object
                    properties:
                      detail:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                            availableBalance:
                              type: string
                            overallBalance:
                              type: string
                            transferableBalance:
                              type: string
                      start:
                        type: integer
                      total:
                        type: integer
        "401":
          description: Invalid API Key
  /v1/indexer/brc20/{ticker}/history:
    get:
      tags:
        - BRC-20
      description: Get the full history of BRC20.
      parameters:
        - name: ticker
          description: Token ticker
          in: path
          required: true
          schema:
            type: string
        - name: type
          description: Filter by history type
          in: query
          required: true
          schema:
            type: string
            enum:
              - inscribe-deploy
              - inscribe-mint
              - inscribe-transfer
              - transfer
              - send
              - receive
        - name: height
          description: Block height
          in: query
          required: true
          schema:
            type: integer
        - name: start
          description: Start offset
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: limit
          description: Number of inscriptions returned
          in: query
          required: true
          schema:
            type: integer
          example: 16
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      detail:
                        type: array
                        items:
                          $ref: "#/components/schemas/BRC20HistoryItem"
                      start:
                        type: integer
                      total:
                        type: integer
        "401":
          description: Invalid API Key
  /v1/indexer/brc20/{ticker}/tx/{txid}/history:
    get:
      tags:
        - BRC-20
      description: Get the full history of BRC20 by address.
      parameters:
        - name: ticker
          description: Token ticker
          in: path
          required: true
          schema:
            type: string
        - name: txid
          description: txid
          in: path
          required: true
          schema:
            type: string
        - name: type
          description: Filter by history type
          in: query
          required: true
          schema:
            type: string
            enum:
              - inscribe-deploy
              - inscribe-mint
              - inscribe-transfer
              - transfer
              - send
              - receive
        - name: start
          description: Start offset
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: limit
          description: Number of inscriptions returned
          in: query
          required: true
          schema:
            type: integer
          example: 16
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      detail:
                        type: array
                        items:
                          $ref: "#/components/schemas/BRC20HistoryItem"
                      start:
                        type: integer
                      total:
                        type: integer
        "401":
          description: Invalid API Key
  /v1/indexer/brc20/history-by-height/{height}:
    get:
      tags:
        - BRC-20
      description: Get the tiker list of BRC20 token.
      parameters:
        - name: height
          description: Block Height
          in: path
          required: true
          schema:
            type: integer
          example: 818698
        - name: start
          description: Start offset
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: limit
          description: Number of inscriptions returned
          in: query
          required: true
          schema:
            type: integer
          example: 16
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      height:
                        type: number
                      total:
                        type: integer
                      start:
                        type: integer
                      detail:
                        type: array
                        items:
                          $ref: "#/components/schemas/BRC20HistoryItem"

        "401":
          description: Invalid API Key
  /v1/indexer/address/{address}/brc20/summary:
    get:
      tags:
        - BRC-20
      description: >-
        Obtain BRC20 token summary by address, including available balance,
        transferable balance
      parameters:
        - name: address
          description: Address
          in: path
          required: true
          schema:
            type: string
        - name: start
          description: Start offset
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: limit
          description: Number of inscriptions returned
          in: query
          required: true
          schema:
            type: integer
          example: 16
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      height:
                        type: integer
                      start:
                        type: integer
                      total:
                        type: integer
                      detail:
                        type: array
                        items:
                          type: object
                          properties:
                            ticker:
                              type: string
                            overallBalance:
                              type: string
                            transferableBalance:
                              type: string
                            availableBalance:
                              type: string
        "401":
          description: Invalid API Key
  /v1/indexer/address/{address}/brc20/summary-by-height/{height}:
    get:
      tags:
        - BRC-20
      description: >-
        Obtain BRC20 token summary by address, including available balance,
        transferable balance
      parameters:
        - name: address
          description: Address
          in: path
          required: true
          schema:
            type: string
        - name: height
          description: Block Height
          in: path
          required: true
          schema:
            type: string
        - name: start
          description: Start offset
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: limit
          description: Number of inscriptions returned
          in: query
          required: true
          schema:
            type: integer
          example: 16
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      height:
                        type: integer
                      start:
                        type: integer
                      total:
                        type: integer
                      detail:
                        type: array
                        items:
                          type: object
                          properties:
                            ticker:
                              type: string
                            overallBalance:
                              type: string
                            transferableBalance:
                              type: string
                            availableBalance:
                              type: string
        "401":
          description: Invalid API Key

  /v1/indexer/address/{address}/brc20/{ticker}/info:
    get:
      tags:
        - BRC-20
      description: >-
        Obtain BRC20 token infomation by address, including available balance,
        transferable balance, number of transferable inscriptions, the first few
        Inscriptions, etc.
      parameters:
        - name: address
          description: Address
          in: path
          required: true
          schema:
            type: string
        - name: ticker
          description: Token ticker
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      ticker:
                        type: string
                      overallBalance:
                        type: string
                      availableBalance:
                        type: string
                      availableBalanceSafe:
                        type: string
                      availableBalanceUnSafe:
                        type: string
                      transferableBalance:
                        type: string
                      historyCount:
                        type: integer
                      historyInscriptions:
                        type: array
                        items:
                          $ref: "#/components/schemas/BRC20HistoryInscription"
                      transferableCount:
                        type: integer
                      transferableInscriptions:
                        type: array
                        items:
                          $ref: "#/components/schemas/BRC20HistoryInscription"
        "401":
          description: Invalid API Key
  /v1/indexer/address/{address}/brc20/history:
    get:
      tags:
        - BRC-20
      description: Get the full history of BRC20 by address.
      parameters:
        - name: address
          description: Address
          in: path
          required: true
          schema:
            type: string
        - name: start
          description: Start offset
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: limit
          description: Number of inscriptions returned
          in: query
          required: true
          schema:
            type: integer
          example: 16
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      detail:
                        type: array
                        items:
                          $ref: "#/components/schemas/BRC20HistoryItem"
                      start:
                        type: integer
                      total:
                        type: integer
        "401":
          description: Invalid API Key

  /v1/indexer/address/{address}/brc20/{ticker}/history:
    get:
      tags:
        - BRC-20
      description: Get the full history of BRC20 by address.
      parameters:
        - name: address
          description: Address
          in: path
          required: true
          schema:
            type: string
        - name: ticker
          description: Token ticker
          in: path
          required: true
          schema:
            type: string
        - name: type
          description: Filter by history type
          in: query
          required: true
          schema:
            type: string
            enum:
              - inscribe-deploy
              - inscribe-mint
              - inscribe-transfer
              - transfer
              - send
              - receive
        - name: start
          description: Start offset
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: limit
          description: Number of inscriptions returned
          in: query
          required: true
          schema:
            type: integer
          example: 16
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      detail:
                        type: array
                        items:
                          $ref: "#/components/schemas/BRC20HistoryItem"
                      start:
                        type: integer
                      total:
                        type: integer
        "401":
          description: Invalid API Key
  /v1/indexer/address/{address}/brc20/{ticker}/transferable-inscriptions:
    get:
      tags:
        - BRC-20
      description: Get the transferable inscriptions list of BRC20 by address.
      parameters:
        - name: address
          description: Address
          in: path
          required: true
          schema:
            type: string
        - name: ticker
          description: Token ticker
          in: path
          required: true
          schema:
            type: string
        - name: start
          description: Start offset
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: limit
          description: Number of inscriptions returned
          in: query
          required: true
          schema:
            type: integer
          example: 16
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      detail:
                        properties:
                          inscriptionNumber:
                            type: integer
                          inscriptionId:
                            type: string
                          satoshi:
                            type: integer
                          confirmations:
                            type: integer
                          data:
                            properties:
                              op:
                                type: string
                              tick:
                                type: string
                              lim:
                                type: string
                              amt:
                                type: string
                              decimal:
                                type: string
                      start:
                        type: integer
                      total:
                        type: integer
        "401":
          description: Invalid API Key
  /v1/indexer/brc20-module/{module}/history:
    get:
      tags:
        - BRC-20
      description: Get the history of BRC20 Module.
      parameters:
        - name: module
          description: Address
          in: path
          required: true
          schema:
            type: string
          example: fd5bd482bed1b62d0702e2f19a1e3bdd4fb755fa5c9bed5d8d0f219a3219ee95i0
        - name: start
          description: Start height
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: end
          description: End height
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: cursor
          description: Start Offset
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: size
          description: Number of events returned
          in: query
          required: true
          schema:
            type: integer
          example: 16
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      detail:
                        type: array
                        items:
                          $ref: "#/components/schemas/ModuleHistoryItem"
                      start:
                        type: integer
                      total:
                        type: integer
        "401":
          description: Invalid API Key

  /v1/indexer/brc20-module/withdraw-history:
    get:
      tags:
        - BRC-20
      description: Get the withdraw history of BRC20.
      parameters:
        - name: start
          description: Start height
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: end
          description: End height
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: cursor
          description: Start Offset
          in: query
          required: true
          schema:
            type: integer
          example: 0
        - name: size
          description: Number of events returned
          in: query
          required: true
          schema:
            type: integer
          example: 16
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      detail:
                        type: array
                        items:
                          $ref: "#/components/schemas/ModuleHistoryItem"
                      start:
                        type: integer
                      total:
                        type: integer
        "401":
          description: Invalid API Key

  /v1/brc20-swap/config:
    get:
      summary: Swap's global configuration information.
      tags:
        - BRC20-Swap
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      moduleId:
                        type: string
                      serviceGasTick:
                        description: The tick used for the second layer gas.
                        type: string
                      pendingDepositDirectNum:
                        description: Number of confirmations required for direct deposit.
                        type: number
                      pendingDepositMatchingNum:
                        description: Number of confirmations required for matching deposit.
                        type: number
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/balance:
    get:
      summary: Gets the balance for the specified address and tick.
      tags:
        - BRC20-Swap
      parameters:
        - schema:
            type: string
          in: query
          name: address
          required: true
        - schema:
            type: string
          in: query
          name: tick
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      balance:
                        type: object
                        properties:
                          module:
                            description: Confirmed module balance.
                            type: string
                          swap:
                            description: Confirmed swap balance.
                            type: string
                          pendingSwap:
                            description: The balance converted from pending to swap.
                            type: string
                          pendingAvailable:
                            description: The balance converted from pending to module.
                            type: string
                        additionalProperties: false
                      decimal:
                        type: string
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/all_balance:
    get:
      summary: Gets the balances for the specified address and tick.
      tags:
        - BRC20-Swap
      parameters:
        - schema:
            type: string
          in: query
          name: address
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    balance:
                      type: object
                      properties:
                        module:
                          description: Confirmed module balance.
                          type: string
                        swap:
                          description: Confirmed swap balance.
                          type: string
                        pendingSwap:
                          description: The balance converted from pending to swap.
                          type: string
                        pendingAvailable:
                          description: The balance converted from pending to module.
                          type: string
                      additionalProperties: false
                    decimal:
                      type: string
                    withdrawLimit:
                      type: string
                  required:
                    - balance
                    - decimal
                    - withdrawLimit
  /v1/brc20-swap/deposit_info:
    get:
      summary:
        Get deposit information for the specified address and tick, including
        daily limit, dosage, recommended deposit amount, etc.
      tags:
        - BRC20-Swap
      parameters:
        - schema:
            type: string
          in: query
          name: address
          required: true
        - schema:
            type: string
          in: query
          name: tick
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      dailyAmount:
                        description: Amount deposit on the day.
                        type: string
                      dailyLimit:
                        description: Limit for the day.
                        type: string
                      recommendDeposit:
                        description: Recommended deposit amount.
                        type: string
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/select:
    get:
      summary: Select the tick information that you can use based on the address.
      tags:
        - BRC20-Swap
      parameters:
        - schema:
            type: string
          in: query
          name: address
          required: true
        - schema:
            type: string
          in: query
          name: search
          required: false
          description: Fuzzy matching
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        tick:
                          type: string
                        decimal:
                          type: string
                        brc20Balance:
                          description: Module balance (not participate in swap calculations)
                          type: string
                        swapBalance:
                          description: Swap balance
                          type: string
                      additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/pre_deploy_pool:
    get:
      summary:
        /deploy_pool interface pre-load, get the signature content, gas and
        byte information.
      tags:
        - BRC20-Swap
      parameters:
        - schema:
            type: string
          in: query
          name: address
          required: true
        - schema:
            type: string
          in: query
          name: tick0
          required: true
        - schema:
            type: string
          in: query
          name: tick1
          required: true
        - schema:
            type: number
          in: query
          name: ts
          required: true
          description: Timestamp (seconds)
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      signMsg:
                        description: User signature information
                        type: string
                      bytesL1:
                        description: Number of bytes on L1 chain
                        type: number
                      bytesL2:
                        description: Number of bytes on L1 chain
                        type: number
                      feeRate:
                        description: Bitcoin network fee rate
                        type: string
                      gasPrice:
                        description: L2 cost per byte
                        type: string
                      serviceFeeL1:
                        type: string
                      serviceFeeL2:
                        type: string
                      unitUsdPriceL1:
                        description: L1 USD price per sats
                        type: string
                      unitUsdPriceL2:
                        description: L2 USD price per sats
                        type: string
                      serviceTickBalance:
                        description: The user's remainin L2 sats balance
                        type: string
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/deploy_pool:
    post:
      summary: Deploy the pool operation.
      tags:
        - BRC20-Swap
      requestBody:
        content:
          application/json:
            schema:
              required:
                - address
                - tick0
                - tick1
                - ts
                - sig
              type: object
              properties:
                address:
                  type: string
                tick0:
                  type: string
                tick1:
                  type: string
                ts:
                  description: Timestamp (seconds)
                  type: number
                sig:
                  description: User signature
                  type: string
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties: {}
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/quote_add_liq:
    get:
      summary: Based on the pair to get the actual addition ratio, LP number and other information.
      tags:
        - BRC20-Swap
      parameters:
        - schema:
            type: string
          in: query
          name: address
          required: true
        - schema:
            type: string
          in: query
          name: tick0
          required: true
        - schema:
            type: string
          in: query
          name: tick1
          required: true
        - schema:
            type: string
          in: query
          name: amount0
          required: false
          description: amount0 and amount1 can only be set individually.
        - schema:
            type: string
          in: query
          name: amount1
          required: false
          description: amount0 and amount1 can only be set individually.
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      amount0:
                        description: The real amount of tick0
                        type: string
                      amount1:
                        description: The real amount of tick1
                        type: string
                      amount0USD:
                        description: The usd value of amount0
                        type: string
                      amount1USD:
                        description: The usd value of amount1
                        type: string
                      lp:
                        description: Estimated lp
                        type: string
                      tick0PerTick1:
                        description: tick0/tick1
                        type: string
                      tick1PerTick0:
                        description: tick1/tick0
                        type: string
                      shareOfPool:
                        description: The proportion of the injected quantity in the pool
                        type: string
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data

  /v1/brc20-swap/pre_add_liq:
    get:
      summary:
        /add_liq interface pre-load, get the signature content, gas and byte
        information.
      tags:
        - BRC20-Swap
      parameters:
        - schema:
            type: string
          in: query
          name: address
          required: true
        - schema:
            type: string
          in: query
          name: tick0
          required: true
        - schema:
            type: string
          in: query
          name: tick1
          required: true
        - schema:
            type: string
          in: query
          name: amount0
          required: true
          description: Input amount of tick0
        - schema:
            type: string
          in: query
          name: amount1
          required: true
          description: Input amount of tick1
        - schema:
            type: string
          in: query
          name: lp
          required: true
          description: Expect amount of lp
        - schema:
            type: string
          in: query
          name: slippage
          required: true
        - schema:
            type: number
          in: query
          name: ts
          required: true
          description: Timestamp (seconds)
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      signMsg:
                        description: User signature information
                        type: string
                      bytesL1:
                        description: Number of bytes on L1 chain
                        type: number
                      bytesL2:
                        description: Number of bytes on L1 chain
                        type: number
                      feeRate:
                        description: Bitcoin network fee rate
                        type: string
                      gasPrice:
                        description: L2 cost per byte
                        type: string
                      serviceFeeL1:
                        type: string
                      serviceFeeL2:
                        type: string
                      unitUsdPriceL1:
                        description: L1 USD price per sats
                        type: string
                      unitUsdPriceL2:
                        description: L2 USD price per sats
                        type: string
                      serviceTickBalance:
                        description: The user's remainin L2 sats balance
                        type: string
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/add_liq:
    post:
      summary: Add the liquidity operation.
      tags:
        - BRC20-Swap
      requestBody:
        content:
          application/json:
            schema:
              required:
                - address
                - tick0
                - tick1
                - amount0
                - amount1
                - lp
                - slippage
                - ts
                - sig
              type: object
              properties:
                address:
                  type: string
                tick0:
                  type: string
                tick1:
                  type: string
                amount0:
                  description: Input amount of tick0
                  type: string
                amount1:
                  description: Input amount of tick1
                  type: string
                lp:
                  type: string
                slippage:
                  type: string
                ts:
                  description: Timestamp (seconds)
                  type: number
                sig:
                  description: User signature
                  type: string
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    required:
                      - amount0
                      - amount1
                    type: object
                    properties:
                      id:
                        description: Function id
                        type: string
                      rollupInscriptionId:
                        description: The rollup inscription id where the function is located
                        type: string
                      address:
                        type: string
                      type:
                        type: string
                      tick0:
                        type: string
                      tick1:
                        type: string
                      amount0:
                        description: Input amount of tick0
                        type: string
                      amount1:
                        description: Input amount of tick1
                        type: string
                      lp:
                        type: string
                      ts:
                        type: number
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/quote_remove_liq:
    get:
      summary: Estimate the number of ticks you can get by typing LP.
      tags:
        - BRC20-Swap
      parameters:
        - schema:
            type: string
          in: query
          name: address
          required: true
        - schema:
            type: string
          in: query
          name: tick0
          required: true
        - schema:
            type: string
          in: query
          name: tick1
          required: true
        - schema:
            type: string
          in: query
          name: lp
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      tick0:
                        description: tick0
                        type: string
                      tick1:
                        description: tick1
                        type: number
                      amount0:
                        description: The real amount of tick0
                        type: string
                      amount1:
                        description: The real amount of tick1
                        type: string
                      amount0USD:
                        description: The usd value of amount0
                        type: string
                      amount1USD:
                        description: The usd value of amount1
                        type: string
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data

  /v1/brc20-swap/pre_remove_liq:
    get:
      summary:
        /remove_liq interface pre-load, get the signature content, gas and byte
        information.
      tags:
        - BRC20-Swap
      parameters:
        - schema:
            type: string
          in: query
          name: address
          required: true
        - schema:
            type: string
          in: query
          name: tick0
          required: true
        - schema:
            type: string
          in: query
          name: tick1
          required: true
        - schema:
            type: string
          in: query
          name: amount0
          required: true
          description: Input amount of tick0
        - schema:
            type: string
          in: query
          name: amount1
          required: true
          description: Input amount of tick1
        - schema:
            type: string
          in: query
          name: lp
          required: true
        - schema:
            type: string
          in: query
          name: slippage
          required: true
        - schema:
            type: number
          in: query
          name: ts
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      signMsg:
                        description: User signature information
                        type: string
                      bytesL1:
                        description: Number of bytes on L1 chain
                        type: number
                      bytesL2:
                        description: Number of bytes on L1 chain
                        type: number
                      feeRate:
                        description: Bitcoin network fee rate
                        type: string
                      gasPrice:
                        description: L2 cost per byte
                        type: string
                      serviceFeeL1:
                        type: string
                      serviceFeeL2:
                        type: string
                      unitUsdPriceL1:
                        description: L1 USD price per sats
                        type: string
                      unitUsdPriceL2:
                        description: L2 USD price per sats
                        type: string
                      serviceTickBalance:
                        description: The user's remainin L2 sats balance
                        type: string
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/remove_liq:
    post:
      summary: Remove the liquidity operation
      tags:
        - BRC20-Swap
      requestBody:
        content:
          application/json:
            schema:
              required:
                - address
                - tick0
                - tick1
                - lp
                - amount0
                - amount1
                - slippage
                - ts
                - sig
              type: object
              properties:
                address:
                  type: string
                tick0:
                  type: string
                tick1:
                  type: string
                lp:
                  type: string
                amount0:
                  description: Input amount of tick0
                  type: string
                amount1:
                  description: Input amount of tick1
                  type: string
                slippage:
                  type: string
                ts:
                  description: Timestamp (seconds)
                  type: number
                sig:
                  description: User signature
                  type: string
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    required:
                      - amount0
                      - amount1
                    type: object
                    properties:
                      id:
                        description: Function id
                        type: string
                      rollupInscriptionId:
                        description: The rollup inscription id where the function is located
                        type: string
                      address:
                        type: string
                      type:
                        type: string
                      tick0:
                        type: string
                      tick1:
                        type: string
                      amount0:
                        description: Input amount of tick0
                        type: string
                      amount1:
                        description: Input amount of tick1
                        type: string
                      lp:
                        type: string
                      ts:
                        type: number
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/quote_swap:
    get:
      summary: quote swap
      tags:
        - BRC20-Swap
      parameters:
        - schema:
            type: string
          in: query
          name: address
          required: true
        - schema:
            type: string
          in: query
          name: tickIn
          required: true
          description: Input tick
        - schema:
            type: string
          in: query
          name: tickOut
          required: true
          description: Output tick
        - schema:
            type: string
          in: query
          name: amount
          required: true
          description: The amount of input tick
        - schema:
            enum:
              - exactIn
              - exactOut
            type: string
            example: exactIn
          in: query
          name: exactType
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      amountUSD:
                        description: Input amount of usd value
                        type: string
                      expectUSD:
                        description: Estimated amount of usd value
                        type: string
                      expect:
                        description: Estimated amount
                        type: string
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/pre_swap:
    get:
      summary: /swap interface pre-load, get the signature content, gas and byte
        information.
      tags:
        - BRC20-Swap
      parameters:
        - schema:
            type: string
          in: query
          name: address
          required: true
        - schema:
            type: string
          in: query
          name: tickIn
          required: true
          description: Input tick
        - schema:
            type: string
          in: query
          name: tickOut
          required: true
          description: Output tick
        - schema:
            type: string
          in: query
          name: amountIn
          required: true
          description: The amount of input tick
        - schema:
            type: string
          in: query
          name: amountOut
          required: true
          description: The amount of output tick
        - schema:
            type: string
          in: query
          name: slippage
          required: true
        - schema:
            enum:
              - exactIn
              - exactOut
            type: string
            example: exactIn
          in: query
          name: exactType
          required: true
        - schema:
            type: number
          in: query
          name: ts
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      signMsg:
                        description: User signature information
                        type: string
                      bytesL1:
                        description: Number of bytes on L1 chain
                        type: number
                      bytesL2:
                        description: Number of bytes on L1 chain
                        type: number
                      feeRate:
                        description: Bitcoin network fee rate
                        type: string
                      gasPrice:
                        description: L2 cost per byte
                        type: string
                      serviceFeeL1:
                        type: string
                      serviceFeeL2:
                        type: string
                      unitUsdPriceL1:
                        description: L1 USD price per sats
                        type: string
                      unitUsdPriceL2:
                        description: L2 USD price per sats
                        type: string
                      serviceTickBalance:
                        description: The user's remainin L2 sats balance
                        type: string
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/swap:
    post:
      summary: The swap operation.
      tags:
        - BRC20-Swap
      requestBody:
        content:
          application/json:
            schema:
              required:
                - address
                - tickIn
                - tickOut
                - amountIn
                - amountOut
                - slippage
                - exactType
                - ts
                - sig
              type: object
              properties:
                address:
                  type: string
                tickIn:
                  description: Input tick
                  type: string
                tickOut:
                  description: Output tick
                  type: string
                amountIn:
                  description: The amount of input tick
                  type: string
                amountOut:
                  description: The amount of output tick
                  type: string
                slippage:
                  type: string
                exactType:
                  enum:
                    - exactIn
                    - exactOut
                  type: string
                ts:
                  description: Timestamp (seconds)
                  type: number
                sig:
                  description: User signature
                  type: string
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        description: Function id
                        type: string
                      rollupInscriptionId:
                        description: The rollup inscription id where the function is located
                        type: string
                      address:
                        type: string
                      tickIn:
                        type: string
                      tickOut:
                        type: string
                      amountIn:
                        type: string
                      amountOut:
                        type: string
                      exactType:
                        type: string
                      ts:
                        type: number
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/pool_list:
    get:
      summary: Gets the pool list information.
      tags:
        - BRC20-Swap
      parameters:
        - schema:
            type: string
          in: query
          name: search
          required: false
          description: Fuzzy matching
        - schema:
            type: number
          in: query
          name: start
          required: true
        - schema:
            type: number
          in: query
          name: limit
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      total:
                        type: number
                      list:
                        type: array
                        items:
                          type: object
                          properties:
                            tick0:
                              type: string
                            tick1:
                              type: string
                            lp:
                              type: string
                            tvl:
                              description: Total pool value
                              type: string
                            volume24h:
                              type: string
                            volume7d:
                              type: string
                          additionalProperties: false
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/my_pool_list:
    get:
      summary: Gets the pool list information by address.
      tags:
        - BRC20-Swap
      parameters:
        - schema:
            type: string
          in: query
          name: address
          required: true
        - schema:
            type: string
          in: query
          name: tick
          required: false
        - schema:
            type: number
          in: query
          name: start
          required: true
        - schema:
            type: number
          in: query
          name: limit
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      total:
                        type: number
                      list:
                        type: array
                        items:
                          required:
                            - amount0
                            - amount1
                          type: object
                          properties:
                            lp:
                              type: string
                            shareOfPool:
                              type: string
                            tick0:
                              type: string
                            tick1:
                              type: string
                            amount0:
                              description: Amount of tick0
                              type: string
                            amount1:
                              description: Amount of tick1
                              type: string
                          additionalProperties: false
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/my_pool:
    get:
      summary: Gets the user pool information for the specified pair.
      tags:
        - BRC20-Swap
      parameters:
        - schema:
            type: string
          in: query
          name: address
          required: true
        - schema:
            type: string
          in: query
          name: tick0
          required: true
        - schema:
            type: string
          in: query
          name: tick1
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    required:
                      - amount0
                      - amount1
                    type: object
                    properties:
                      lp:
                        type: string
                      shareOfPool:
                        type: string
                      tick0:
                        type: string
                      tick1:
                        type: string
                      amount0:
                        description: Amount of tick0
                        type: string
                      amount1:
                        description: Amount of tick1
                        type: string
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/overview:
    get:
      summary: An overview of swap information
      tags:
        - BRC20-Swap
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      liquidity:
                        description: Total value of all pools
                        type: string
                      volume7d:
                        description: 7 days volume
                        type: string
                      volume24h:
                        description: 24 hours volume
                        type: string
                      transactions:
                        description: Number of transactions in 24 hours
                        type: number
                      pairs:
                        type: number
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/gas_history:
    get:
      summary: Gets the gas consumption records for a user aggregation operation.
      tags:
        - BRC20-Swap
      parameters:
        - schema:
            type: string
          in: query
          name: address
          required: false
        - schema:
            type: number
          in: query
          name: start
          required: true
        - schema:
            maximum: 100
            exclusiveMaximum: true
            type: number
          in: query
          name: limit
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      total:
                        type: number
                      list:
                        type: array
                        items:
                          type: object
                          properties:
                            funcType:
                              description: Function type
                              type: string
                              example: swap
                            tickA:
                              type: string
                            tickB:
                              type: string
                            gas:
                              type: string
                            ts:
                              type: number
                          additionalProperties: false
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/liq_history:
    get:
      summary: Gets the history of a pair addition pool.
      tags:
        - BRC20-Swap
      parameters:
        - schema:
            type: string
          in: query
          name: address
          required: false
        - schema:
            type: string
          in: query
          name: tick
          required: false
        - schema:
            type: string
            example:
              - add
              - remove
          in: query
          name: type
          required: false
        - schema:
            type: number
          in: query
          name: start
          required: true
        - schema:
            maximum: 100
            exclusiveMaximum: true
            type: number
          in: query
          name: limit
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      total:
                        type: number
                      list:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                            tick0:
                              type: string
                            tick1:
                              type: string
                            amount0:
                              type: string
                            amount1:
                              type: string
                            lp:
                              type: string
                            ts:
                              type: number
                          additionalProperties: false
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/swap_history:
    get:
      summary: Gets the history of swap.
      tags:
        - BRC20-Swap
      parameters:
        - schema:
            type: string
          in: query
          name: address
          required: false
        - schema:
            type: string
          in: query
          name: tick
          required: false
        - schema:
            type: number
          in: query
          name: start
          required: true
        - schema:
            maximum: 100
            exclusiveMaximum: true
            type: number
          in: query
          name: limit
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      total:
                        type: number
                      list:
                        type: array
                        items:
                          required:
                            - tickIn
                            - tickOut
                            - amountIn
                            - amountOut
                          type: object
                          properties:
                            tickIn:
                              description: Input tick
                              type: string
                            tickOut:
                              description: Output tick
                              type: string
                            amountIn:
                              description: The amount of input tick
                              type: string
                            amountOut:
                              description: The amount of output tick
                              type: string
                            exactType:
                              type: string
                            ts:
                              type: number
                          additionalProperties: false
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/rollup_history:
    get:
      summary: Get chain history of rollup inscription.
      tags:
        - BRC20-Swap
      parameters:
        - schema:
            type: number
          in: query
          name: start
          required: true
        - schema:
            maximum: 100
            exclusiveMaximum: true
            type: number
          in: query
          name: limit
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      total:
                        type: number
                      list:
                        type: array
                        items:
                          type: object
                          properties:
                            txid:
                              type: string
                            height:
                              type: number
                            transactionNum:
                              description: Number of transactions in the inscription
                              type: number
                            inscriptionId:
                              description: Rollup inscription id
                              type: string
                            inscriptionNumber:
                              description: Rollup inscription number
                              type: number
                            ts:
                              type: number
                          additionalProperties: false
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/deposit_list:
    get:
      summary: Gets the deposit list for a user.
      tags:
        - BRC20-Swap
      parameters:
        - schema:
            type: string
          in: query
          name: address
          required: true
        - schema:
            type: string
          in: query
          name: tick
          required: false
        - schema:
            type: number
          in: query
          name: start
          required: true
        - schema:
            type: number
          in: query
          name: limit
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      total:
                        type: number
                      list:
                        type: array
                        items:
                          type: object
                          properties:
                            tick:
                              type: string
                            amount:
                              type: string
                            cur:
                              description: Current number of confirmations
                              type: number
                            sum:
                              description: Total number of confirmations
                              type: number
                            ts:
                              type: number
                            txid:
                              type: string
                            type:
                              type: string
                          additionalProperties: false
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/create_deposit:
    get:
      summary: Create a deposit psbt to be signed by the user.
      tags:
        - BRC20-Swap
      parameters:
        - schema:
            type: string
          in: query
          name: inscriptionId
          required: true
        - schema:
            type: string
          in: query
          name: pubkey
          required: true
        - schema:
            type: string
          in: query
          name: address
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      psbt:
                        type: string
                      type:
                        description: Direct or matching
                        type: string
                      expiredTimestamp:
                        type: number
                      recommendDeposit:
                        type: string
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/confirm_deposit:
    post:
      summary: User signature deposit psbt, submit confirmation.
      tags:
        - BRC20-Swap
      requestBody:
        content:
          application/json:
            schema:
              required:
                - psbt
                - inscriptionId
              type: object
              properties:
                psbt:
                  type: string
                inscriptionId:
                  type: string
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties: {}
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/system_status:
    get:
      summary: Gets the current system state.
      tags:
        - BRC20-Swap
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      committing:
                        description: Is rollup inscription committing
                        type: boolean
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/withdraw_history:
    get:
      summary: Gets the user withdrawal history.
      tags:
        - BRC20-Swap
      parameters:
        - schema:
            type: string
          in: query
          name: address
          required: true
        - schema:
            type: number
          in: query
          name: start
          required: true
        - schema:
            type: number
          in: query
          name: limit
          required: true
        - schema:
            type: string
          in: query
          name: tick
          required: false
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      total:
                        type: number
                      list:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            tick:
                              type: string
                            totalAmount:
                              description: Total amount withdrawal
                              type: string
                            completedAmount:
                              description: The number of withdrawal completed
                              type: string
                            ts:
                              type: number
                            totalConfirmedNum:
                              description: The current number of confirmations
                              type: number
                            totalNum:
                              description: The total number of confirmations
                              type: number
                            status:
                              type: string
                          additionalProperties: false
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/create_withdraw:
    get:
      summary: Create a withdraw psbt to be signed by the user.
      tags:
        - BRC20-Swap
      parameters:
        - schema:
            type: string
          in: query
          name: pubkey
          required: true
        - schema:
            type: string
          in: query
          name: address
          required: true
        - schema:
            type: string
          in: query
          name: tick
          required: true
        - schema:
            type: string
          in: query
          name: amount
          required: true
        - schema:
            type: number
          in: query
          name: ts
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        description: The withdraw order id
                        type: string
                      paymentPsbt:
                        description: The user psbt with payment
                        type: string
                      approvePsbt:
                        description: The user psbt with approve insctiption
                        type: string
                      networkFee:
                        type: number
                      signMsg:
                        description: User signature information
                        type: string
                      bytesL1:
                        description: Number of bytes on L1 chain
                        type: number
                      bytesL2:
                        description: Number of bytes on L1 chain
                        type: number
                      feeRate:
                        description: Bitcoin network fee rate
                        type: string
                      gasPrice:
                        description: L2 cost per byte
                        type: string
                      serviceFeeL1:
                        type: string
                      serviceFeeL2:
                        type: string
                      unitUsdPriceL1:
                        description: L1 USD price per sats
                        type: string
                      unitUsdPriceL2:
                        description: L2 USD price per sats
                        type: string
                      serviceTickBalance:
                        description: The user's remainin L2 sats balance
                        type: string
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/confirm_withdraw:
    post:
      summary: User signature withdraw psbt, submit confirmation.
      tags:
        - BRC20-Swap
      requestBody:
        content:
          application/json:
            schema:
              required:
                - id
                - sig
                - paymentPsbt
                - approvePsbt
              type: object
              properties:
                id:
                  description: The withdraw order id
                  type: string
                sig:
                  type: string
                paymentPsbt:
                  type: string
                approvePsbt:
                  type: string
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties: {}
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/brc20-swap/withdraw_process:
    get:
      summary: Gets the withdrawal progress for the specified ID.
      tags:
        - BRC20-Swap
      parameters:
        - schema:
            type: string
          in: query
          name: id
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      tick:
                        type: string
                      amount:
                        type: string
                      ts:
                        type: number
                      status:
                        type: string
                      totalConfirmedNum:
                        type: number
                      totalNum:
                        description: Total number of confirmations (rollUp + approve)
                        type: number
                      rollUpConfirmNum:
                        type: number
                      rollUpTotalNum:
                        description: Total number of rollUp confirmations
                        type: number
                      approveConfirmNum:
                        type: number
                      approveTotalNum:
                        description: Total number of approve confirmations
                        type: number
                      cancelConfirmedNum:
                        type: number
                      cancelTotalNum:
                        type: number
                      rollUpTxid:
                        description:
                          Decrease operation is required to withdraw, which in rollup
                          inscription
                        type: string
                      paymentTxid:
                        type: string
                      inscribeTxid:
                        type: string
                      approveTxid:
                        type: string
                      completedAmount:
                        type: string
                      matchHistory:
                        type: array
                        items:
                          type: object
                          properties:
                            approveInscriptionId:
                              description: Withdraw inscription
                              type: string
                            transferInscriptionId:
                              description: Deposit inscription
                              type: string
                            tick:
                              type: string
                            consumeAmount:
                              type: string
                            remainAmount:
                              description: Residual cash withdrawal
                              type: string
                            approveAddress:
                              description: Withdraw user address
                              type: string
                            transferAddress:
                              description: Deposit user address
                              type: string
                            txid:
                              description: Matching txid
                              type: string
                            ts:
                              type: number
                          additionalProperties: false
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data

  /v3/market/brc20/auction/bind_info:
    post:
      summary: Get the address bind info.
      tags:
        - MarketPlace-BRC20
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BindInfoRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BindInfoResponse"

  /v3/market/brc20/auction/brc20_kline:
    post:
      summary: Get tick k line.
      tags:
        - MarketPlace-BRC20
      requestBody:
        content:
          application/json:
            schema:
              required:
                - tick
                - timeStart
                - timeEnd
                - timeStep
              type: object
              properties:
                tick:
                  type: string
                timeStart:
                  description: Start time range
                  type: number
                timeEnd:
                  description: End time range
                  type: number
                timeStep:
                  description: Time granularity, such as milliseconds for a 5-minute interval
                  type: number
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        price:
                          type: number
                        timestamp:
                          type: number
                      additionalProperties: false
                required:
                  - msg
                  - code
                  - data

  /v3/market/brc20/auction/brc20_types:
    post:
      summary: Get statistical data, price, market capitalization, etc. for BRC20.
      tags:
        - MarketPlace-BRC20
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tickLen:
                  type: number
                  enum:
                    - 4
                    - 5
                  example: 4
                timeType:
                  enum:
                    - day1
                    - day7
                    - day30
                  description: "Optional: day1, day7, day30"
                  type: string
                ticks:
                  description: Specify a list of ticks
                  type: array
                  items:
                    type: string
                start:
                  type: number
                limit:
                  type: number
              additionalProperties: false
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    required:
                      - BTCPrice
                    type: object
                    properties:
                      BTCPrice:
                        type: number
                      list:
                        type: array
                        items:
                          required:
                            - tick
                            - curPrice
                            - changePrice
                            - btcVolume
                            - amountVolume
                            - cap
                          type: object
                          properties:
                            tick:
                              type: string
                            curPrice:
                              type: number
                            changePrice:
                              type: number
                            btcVolume:
                              type: number
                            amountVolume:
                              type: number
                            cap:
                              type: string
                          additionalProperties: false
                      deploy:
                        description: The first three deployments of tick
                        type: array
                        items:
                          required:
                            - tick
                            - curPrice
                            - changePrice
                            - btcVolume
                            - amountVolume
                            - cap
                          type: object
                          properties:
                            tick:
                              type: string
                            curPrice:
                              type: number
                            changePrice:
                              type: number
                            btcVolume:
                              type: number
                            amountVolume:
                              type: number
                            cap:
                              type: string
                          additionalProperties: false
                      cap:
                        description: The top three tick by market capitalization
                        type: array
                        items:
                          required:
                            - tick
                            - curPrice
                            - changePrice
                            - btcVolume
                            - amountVolume
                            - cap
                          type: object
                          properties:
                            tick:
                              type: string
                            curPrice:
                              type: number
                            changePrice:
                              type: number
                            btcVolume:
                              type: number
                            amountVolume:
                              type: number
                            cap:
                              type: string
                          additionalProperties: false
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v3/market/brc20/auction/brc20_types_specified:
    post:
      summary: Get statistical data, price, market capitalization, etc. for BRC20.
      tags:
        - MarketPlace-BRC20
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                timeType:
                  enum:
                    - day1
                    - day7
                    - day30
                  type: string
                tick:
                  type: string
              additionalProperties: false
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      tick:
                        type: string
                      curPrice:
                        type: number
                      changePrice:
                        type: number
                      btcVolume:
                        type: number
                      amountVolume:
                        type: number
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v3/market/brc20/auction/bind:
    post:
      summary: Bind btcAddress and nftAddress.
      tags:
        - MarketPlace-BRC20
      requestBody:
        content:
          application/json:
            schema:
              required:
                - btcAddress
                - nftAddress
                - sign
              type: object
              properties:
                btcAddress:
                  type: string
                nftAddress:
                  type: string
                sign:
                  type: string
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties: {}
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v3/market/brc20/auction/list:
    post:
      summary: Retrieve the list information of the market.
      tags:
        - MarketPlace-BRC20
      requestBody:
        content:
          application/json:
            schema:
              required:
                - filter
                - sort
                - start
                - limit
              type: object
              properties:
                filter:
                  required:
                    - nftType
                  type: object
                  properties:
                    nftType:
                      enum:
                        - brc20
                      type: string
                    address:
                      type: string
                    tick:
                      type: string
                    minPrice:
                      type: number
                    maxPrice:
                      type: number
                    nftConfirm:
                      type: boolean
                    isEnd:
                      description: Whether order ends
                      type: boolean
                    all:
                      description: Ignore start and limit and return all collection data
                      type: boolean
                  additionalProperties: false
                sort:
                  type: object
                  properties:
                    unitPrice:
                      enum:
                        - 1
                        - -1
                      type: number
                    onSaleTime:
                      enum:
                        - 1
                        - -1
                      type: number
                    initPrice:
                      enum:
                        - 1
                        - -1
                      type: number
                    inscriptionNumber:
                      enum:
                        - 1
                        - -1
                      type: number
                  additionalProperties: false
                start:
                  description: The data is looked up from start
                  type: number
                limit:
                  maximum: 100
                  exclusiveMaximum: true
                  description: Limit the amount of data
                  type: number
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    required:
                      - list
                      - total
                    type: object
                    properties:
                      list:
                        type: array
                        items:
                          required:
                            - inscriptionId
                          type: object
                          properties:
                            auctionId:
                              type: string
                              nullable: true
                            inscriptionId:
                              type: string
                            inscriptionNumber:
                              type: number
                              nullable: true
                            marketType:
                              type: string
                              nullable: true
                            address:
                              type: string
                              nullable: true
                            price:
                              type: number
                              nullable: true
                            nftType:
                              type: string
                              nullable: true
                            tick:
                              description: Brc20 field
                              type: string
                              nullable: true
                            limit:
                              description: Brc20 field
                              type: number
                              nullable: true
                            amount:
                              description: Brc20 field
                              type: number
                              nullable: true
                            unitPrice:
                              description: Brc20 field
                              type: number
                              nullable: true
                          additionalProperties: false
                      total:
                        type: number
                      timestamp:
                        type: number
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v3/market/brc20/auction/inscription_info:
    post:
      summary:
        Retrieve inscription information, including brc20, names, collection.
        It is necessary to first determine the inscription type before calling
        the relevant services.
      tags:
        - MarketPlace-BRC20
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketInscriptionInfoRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketInscriptionInfoResponse"
  /v3/market/brc20/auction/inscription_info_list:
    post:
      summary: Get the basic listing information of the specified inscription list
      tags:
        - MarketPlace-BRC20
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketInscriptionInfoListRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketInscriptionInfoListResponse"
  /v3/market/brc20/auction/actions:
    post:
      summary: Get information on listings, delistings, and sales.
      tags:
        - MarketPlace-BRC20
      requestBody:
        content:
          application/json:
            schema:
              required:
                - filter
                - start
                - limit
              type: object
              properties:
                filter:
                  type: object
                  properties:
                    nftType:
                      enum:
                        - brc20
                      type: string
                    address:
                      type: string
                    inscriptionId:
                      type: string
                    event:
                      enum:
                        - Cancel
                        - Claim
                        - Listed
                        - Sold
                        - Updated
                      description: "Event type: Cancel, Listed, Sold, Updated"
                      type: string
                    tick:
                      type: string
                  additionalProperties: false
                start:
                  type: number
                limit:
                  maximum: 100
                  exclusiveMaximum: true
                  type: number
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    required:
                      - total
                    type: object
                    properties:
                      list:
                        type: array
                        items:
                          required:
                            - auctionId
                            - inscriptionId
                            - inscriptionNumber
                            - event
                            - price
                            - from
                            - to
                            - timestamp
                          type: object
                          properties:
                            auctionId:
                              type: string
                            inscriptionId:
                              type: string
                            inscriptionNumber:
                              type: number
                            event:
                              enum:
                                - Listed
                                - Sold
                                - Cancel
                                - Claim
                                - Updated
                              type: string
                            price:
                              type: number
                            from:
                              type: string
                            to:
                              type: string
                              nullable: true
                            timestamp:
                              type: number
                            nftConfirmNum:
                              type: number
                            nftType:
                              enum:
                                - brc20
                                - domain
                                - collection
                              type: string
                            endMsg:
                              description: An error message generated by the order
                              type: string
                              nullable: true
                            newest:
                              description: The update order generates multiple events
                              type: boolean
                            name:
                              description: Brc20 filed
                              type: string
                              nullable: true
                            unitPrice:
                              description: Brc20 filed
                              type: number
                              nullable: true
                            amount:
                              description: Brc20 filed
                              type: number
                              nullable: true
                            domain:
                              description: Domain filed
                              type: string
                              nullable: true
                            domainType:
                              enum:
                                - sats
                                - unisat
                                - btc
                                - xbt
                                - ord
                                - gm
                                - bitmap
                                - x
                                - null
                              description: Domain filed
                              type: string
                              nullable: true
                            domainCategorys:
                              description: Domain filed
                              type: array
                              items:
                                enum:
                                  - Keyboard
                                  - Non Keyboard
                                  - 1-99
                                  - 3D
                                  - 4D
                                  - 5D
                                  - Single Emoji
                                  - Multi Emoji
                                  - Common Word
                                  - 1 Letter + 1 Number
                                  - 2 Letters
                                  - 3 Letters
                                  - Numbers
                                type: string
                              nullable: true
                            collectionId:
                              description: Collection filed
                              type: string
                              nullable: true
                            collectionItemName:
                              description: Collection filed
                              type: string
                              nullable: true
                            contentType:
                              description: Collection filed
                              type: string
                              nullable: true
                            contentBody:
                              description: Collection filed
                              type: string
                              nullable: true
                            attributes:
                              description: Collection filed
                              type: array
                              items:
                                type: object
                                properties:
                                  trait_type:
                                    type: string
                                  value:
                                    type: string
                                additionalProperties: false
                              nullable: true
                          additionalProperties: false
                      total:
                        type: number
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v3/market/brc20/auction/create_put_on:
    post:
      summary: Create listing order.
      tags:
        - MarketPlace-BRC20
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketCreatePutOnRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketCreatePutOnResponse"
  /v3/market/brc20/auction/confirm_put_on:
    post:
      summary: Confirm listing order.
      tags:
        - MarketPlace-BRC20
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketConfirmPutOnRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketConfirmPutOnResponse"
  /v3/market/brc20/auction/create_bid_prepare:
    post:
      summary: Return params before creating purchase order.
      tags:
        - MarketPlace-BRC20
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketCreateBidPrepareRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketCreateBidPrepareResponse"
  /v3/market/brc20/auction/create_bid:
    post:
      summary: Create purchase order.
      tags:
        - MarketPlace-BRC20
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketCreateBidRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketCreateBidResponse"
  /v3/market/brc20/auction/confirm_bid:
    post:
      summary: Confirm purchase order.
      tags:
        - MarketPlace-BRC20
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketConfirmBidRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketConfirmBidResponse"
  /v3/market/brc20/auction/create_put_off:
    post:
      summary: Create delisting order.
      tags:
        - MarketPlace-BRC20
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketCreatePutOffRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketCreatePutOffResponse"
  /v3/market/brc20/auction/confirm_put_off:
    post:
      summary: Confirm delisting order.
      tags:
        - MarketPlace-BRC20
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketConfirmPutOffRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketConfirmPutOffResponse"
  /v3/market/brc20/auction/create_modify_price:
    post:
      summary: Create the order for price adjustment.
      tags:
        - MarketPlace-BRC20
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketCreateModifyPriceRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketCreateModifyPriceResponse"
  /v3/market/brc20/auction/confirm_modify_price:
    post:
      summary: Confirm the order for price adjustment.
      tags:
        - MarketPlace-BRC20
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketConfirmModifyPriceRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketConfirmModifyPriceResponse"

  /v3/market/collection/auction/collection_statistic:
    post:
      summary: Return a summary of collection.
      tags:
        - MarketPlace-Collection
      requestBody:
        content:
          application/json:
            schema:
              required:
                - collectionId
              type: object
              properties:
                collectionId:
                  type: string
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      collectionId:
                        type: string
                      name:
                        description: Collection name
                        type: string
                      desc:
                        description: Collection desc
                        type: string
                      icon:
                        description: Collection icon
                        type: string
                      iconContentType:
                        description: Collection icon content type
                        type: string
                      btcValue:
                        description: Total transaction volume
                        type: number
                      floorPrice:
                        type: number
                      pricePercent:
                        type: number
                      listed:
                        description: The quantity listed for sale
                        type: number
                      total:
                        description: The quantity of items already produced
                        type: number
                      supply:
                        type: number
                      twitter:
                        type: string
                      discord:
                        type: string
                      website:
                        type: string
                      verification:
                        description: Officially certified
                        type: boolean
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v3/market/collection/auction/collection_statistic_list:
    post:
      summary: Return a summary of collection.
      tags:
        - MarketPlace-Collection
      requestBody:
        content:
          application/json:
            schema:
              required:
                - start
                - limit
              type: object
              properties:
                filter:
                  required:
                    - timeType
                  type: object
                  properties:
                    timeType:
                      type: string
                    name:
                      type: string
                    collections:
                      type: array
                      items:
                        type: string
                  additionalProperties: false
                start:
                  type: number
                limit:
                  maximum: 21
                  exclusiveMaximum: true
                  type: number
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      list:
                        type: array
                        items:
                          type: object
                          properties:
                            collectionId:
                              type: string
                            name:
                              description: Collection name
                              type: string
                            desc:
                              description: Collection desc
                              type: string
                            icon:
                              description: Collection icon
                              type: string
                            iconContentType:
                              description: Collection icon content type
                              type: string
                            btcValue:
                              description: Total transaction volume
                              type: number
                            floorPrice:
                              type: number
                            pricePercent:
                              type: number
                            listed:
                              description: The quantity listed for sale
                              type: number
                            total:
                              description: The quantity of items already produced
                              type: number
                            supply:
                              type: number
                            twitter:
                              type: string
                            discord:
                              type: string
                            website:
                              type: string
                            verification:
                              description: Officially certified
                              type: boolean
                          additionalProperties: false
                      total:
                        type: number
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v3/market/collection/auction/collection_summary:
    post:
      summary: Get the collection statistics information at a certain address
      tags:
        - MarketPlace-Collection
      requestBody:
        content:
          application/json:
            schema:
              required:
                - address
              type: object
              properties:
                firstCollectionId:
                  type: string
                address:
                  type: string
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      list:
                        type: array
                        items:
                          type: object
                          properties:
                            collectionId:
                              type: string
                            icon:
                              type: string
                            iconContentType:
                              type: string
                            name:
                              type: string
                            total:
                              type: number
                          additionalProperties: false
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v3/market/collection/auction/collection_inscriptions:
    post:
      summary: Get the list details of a certain collection at a certain address
      tags:
        - MarketPlace-Collection
      requestBody:
        content:
          application/json:
            schema:
              required:
                - collectionId
                - address
                - start
                - limit
              type: object
              properties:
                collectionId:
                  type: string
                address:
                  type: string
                start:
                  type: number
                limit:
                  type: number
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      list:
                        type: array
                        items:
                          type: object
                          properties:
                            collectionId:
                              type: string
                            collectionName:
                              type: string
                            collectionItemName:
                              type: string
                            collectionHighResImgUrl:
                              type: string
                            inscriptionId:
                              type: string
                            inscriptionNumber:
                              type: number
                            contentType:
                              type: string
                            listed:
                              type: boolean
                          additionalProperties: false
                      total:
                        type: number
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v3/market/collection/auction/inscription_info:
    post:
      summary:
        Retrieve inscription information, including brc20, names, collection.
        It is necessary to first determine the inscription type before calling
        the relevant services.
      tags:
        - MarketPlace-Collection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketInscriptionInfoRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketInscriptionInfoResponse"
  /v3/market/collection/auction/inscription_info_list:
    post:
      summary: Get the basic listing information of the specified inscription list
      tags:
        - MarketPlace-Collection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketInscriptionInfoListRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketInscriptionInfoListResponse"
  /v3/market/collection/auction/list:
    post:
      summary: Retrieve the list information of the market.
      tags:
        - MarketPlace-Collection
      requestBody:
        content:
          application/json:
            schema:
              required:
                - filter
                - sort
                - start
                - limit
              type: object
              properties:
                filter:
                  required:
                    - nftType
                  type: object
                  properties:
                    nftType:
                      enum:
                        - brc20
                        - domain
                        - collection
                      type: string
                    address:
                      type: string
                    tick:
                      type: string
                    minPrice:
                      type: number
                    maxPrice:
                      type: number
                    nftConfirm:
                      type: boolean
                    isEnd:
                      description: Whether order ends
                      type: boolean
                    domainType:
                      enum:
                        - sats
                        - unisat
                        - btc
                        - xbt
                        - ord
                        - gm
                        - bitmap
                        - x
                      type: string
                    domainMinLength:
                      minimum: 0
                      exclusiveMinimum: true
                      type: number
                    domainMaxLength:
                      type: integer
                    domainCategory:
                      type: string
                    domainFuzzy:
                      description: Fuzzy domain name search
                      type: string
                    collectionId:
                      type: string
                    collectionFuzzy:
                      description: Fuzzy collection name search
                      type: string
                    all:
                      description: Ignore start and limit and return all collection data
                      type: boolean
                  additionalProperties: false
                sort:
                  type: object
                  properties:
                    unitPrice:
                      enum:
                        - 1
                        - -1
                      type: number
                    onSaleTime:
                      enum:
                        - 1
                        - -1
                      type: number
                    initPrice:
                      enum:
                        - 1
                        - -1
                      type: number
                    inscriptionNumber:
                      enum:
                        - 1
                        - -1
                      type: number
                  additionalProperties: false
                start:
                  description: The data is looked up from start
                  type: number
                limit:
                  maximum: 100
                  exclusiveMaximum: true
                  description: Limit the amount of data
                  type: number
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    required:
                      - list
                      - total
                    type: object
                    properties:
                      list:
                        type: array
                        items:
                          required:
                            - inscriptionId
                          type: object
                          properties:
                            auctionId:
                              type: string
                              nullable: true
                            inscriptionId:
                              type: string
                            inscriptionNumber:
                              type: number
                              nullable: true
                            marketType:
                              type: string
                              nullable: true
                            address:
                              type: string
                              nullable: true
                            price:
                              type: number
                              nullable: true
                            notSupport:
                              description: Domain name content support on sale
                              type: boolean
                            verification:
                              description: Whether the collection is validated
                              type: boolean
                            nftType:
                              type: string
                              nullable: true
                            tick:
                              description: Brc20 field
                              type: string
                              nullable: true
                            limit:
                              description: Brc20 field
                              type: number
                              nullable: true
                            amount:
                              description: Brc20 field
                              type: number
                              nullable: true
                            unitPrice:
                              description: Brc20 field
                              type: number
                              nullable: true
                            collectionId:
                              description: Collection field
                              type: string
                              nullable: true
                            contentType:
                              description: Collection field
                              type: string
                              nullable: true
                            contentBody:
                              description: Collection field
                              type: string
                              nullable: true
                            collectionItemName:
                              description: Collection field
                              type: string
                              nullable: true
                            collectionHighResImgUrl:
                              description: Collection field
                              type: string
                              nullable: true
                            collectionName:
                              description: Collection field
                              type: string
                              nullable: true
                            notOnSale:
                              description: Collection field
                              type: boolean
                              nullable: true
                            domain:
                              description: Domain field
                              type: string
                              nullable: true
                            domainHex:
                              description: Domain field
                              type: string
                              nullable: true
                            domainType:
                              enum:
                                - sats
                                - unisat
                                - btc
                                - xbt
                                - ord
                                - gm
                                - bitmap
                                - x
                                - null
                              description: Domain field
                              type: string
                              nullable: true
                          additionalProperties: false
                      total:
                        type: number
                      timestamp:
                        type: number
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v3/market/collection/auction/actions:
    post:
      summary: Get information on listings, delistings, and sales.
      tags:
        - MarketPlace-Collection
      requestBody:
        content:
          application/json:
            schema:
              required:
                - filter
                - start
                - limit
              type: object
              properties:
                filter:
                  type: object
                  properties:
                    nftType:
                      enum:
                        - brc20
                        - collection
                        - domain
                      type: string
                    address:
                      type: string
                    inscriptionId:
                      type: string
                    event:
                      enum:
                        - Cancel
                        - Claim
                        - Listed
                        - Sold
                        - Updated
                      description: "Event type: Cancel, Listed, Sold, Updated"
                      type: string
                    tick:
                      type: string
                    domainType:
                      type: string
                    collectionId:
                      type: string
                  additionalProperties: false
                start:
                  type: number
                limit:
                  maximum: 100
                  exclusiveMaximum: true
                  type: number
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    required:
                      - total
                    type: object
                    properties:
                      list:
                        type: array
                        items:
                          required:
                            - auctionId
                            - inscriptionId
                            - inscriptionNumber
                            - event
                            - price
                            - from
                            - to
                            - timestamp
                          type: object
                          properties:
                            auctionId:
                              type: string
                            inscriptionId:
                              type: string
                            inscriptionNumber:
                              type: number
                            event:
                              enum:
                                - Listed
                                - Sold
                                - Cancel
                                - Claim
                                - Updated
                              type: string
                            price:
                              type: number
                            from:
                              type: string
                            to:
                              type: string
                              nullable: true
                            timestamp:
                              type: number
                            nftConfirmNum:
                              type: number
                            nftType:
                              enum:
                                - brc20
                                - domain
                                - collection
                              type: string
                            endMsg:
                              description: An error message generated by the order
                              type: string
                              nullable: true
                            newest:
                              description: The update order generates multiple events
                              type: boolean
                            name:
                              description: Brc20 filed
                              type: string
                              nullable: true
                            unitPrice:
                              description: Brc20 filed
                              type: number
                              nullable: true
                            amount:
                              description: Brc20 filed
                              type: number
                              nullable: true
                            domain:
                              description: Domain filed
                              type: string
                              nullable: true
                            domainType:
                              enum:
                                - sats
                                - unisat
                                - btc
                                - xbt
                                - ord
                                - gm
                                - bitmap
                                - x
                                - null
                              description: Domain filed
                              type: string
                              nullable: true
                            domainCategorys:
                              description: Domain filed
                              type: array
                              items:
                                enum:
                                  - Keyboard
                                  - Non Keyboard
                                  - 1-99
                                  - 3D
                                  - 4D
                                  - 5D
                                  - Single Emoji
                                  - Multi Emoji
                                  - Common Word
                                  - 1 Letter + 1 Number
                                  - 2 Letters
                                  - 3 Letters
                                  - Numbers
                                type: string
                              nullable: true
                            collectionId:
                              description: Collection filed
                              type: string
                              nullable: true
                            collectionItemName:
                              description: Collection filed
                              type: string
                              nullable: true
                            contentType:
                              description: Collection filed
                              type: string
                              nullable: true
                            contentBody:
                              description: Collection filed
                              type: string
                              nullable: true
                            attributes:
                              description: Collection filed
                              type: array
                              items:
                                type: object
                                properties:
                                  trait_type:
                                    type: string
                                  value:
                                    type: string
                                additionalProperties: false
                              nullable: true
                          additionalProperties: false
                      total:
                        type: number
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v3/market/collection/auction/create_put_on:
    post:
      summary: Create listing order.
      tags:
        - MarketPlace-Collection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketCreatePutOnRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketCreatePutOnResponse"
  /v3/market/collection/auction/confirm_put_on:
    post:
      summary: Confirm listing order.
      tags:
        - MarketPlace-Collection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketConfirmPutOnRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketConfirmPutOnResponse"
  /v3/market/collection/auction/create_bid_prepare:
    post:
      summary: Return params before creating purchase order.
      tags:
        - MarketPlace-Collection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketCreateBidPrepareRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketCreateBidPrepareResponse"
  /v3/market/collection/auction/create_bid:
    post:
      summary: Create purchase order.
      tags:
        - MarketPlace-Collection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketCreateBidRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketCreateBidResponse"
  /v3/market/collection/auction/confirm_bid:
    post:
      summary: Confirm purchase order.
      tags:
        - MarketPlace-Collection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketConfirmBidRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketConfirmBidResponse"
  /v3/market/collection/auction/create_put_off:
    post:
      summary: Create delisting order.
      tags:
        - MarketPlace-Collection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketCreatePutOffRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketCreatePutOffResponse"
  /v3/market/collection/auction/confirm_put_off:
    post:
      summary: Confirm delisting order.
      tags:
        - MarketPlace-Collection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketConfirmPutOffRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketConfirmPutOffResponse"
  /v3/market/collection/auction/create_modify_price:
    post:
      summary: Create the order for price adjustment.
      tags:
        - MarketPlace-Collection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketCreateModifyPriceRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketCreateModifyPriceResponse"
  /v3/market/collection/auction/confirm_modify_price:
    post:
      summary: Confirm the order for price adjustment.
      tags:
        - MarketPlace-Collection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketConfirmModifyPriceRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketConfirmModifyPriceResponse"

  /v3/market/domain/auction/domain_types:
    post:
      summary: Get statistical data, price, market capitalization, etc. for domain.
      tags:
        - MarketPlace-Domain
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      list:
                        type: array
                        items:
                          type: object
                          properties:
                            btcVolume:
                              type: number
                            btcVolumePercent:
                              type: number
                            amountVolume:
                              type: number
                            curPrice:
                              type: integer
                            domainType:
                              type: string
                          additionalProperties: false
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v3/market/domain/auction/domain_statistic:
    post:
      summary: Return a summary of domain.
      tags:
        - MarketPlace-Domain
      requestBody:
        content:
          application/json:
            schema:
              required:
                - domainType
              type: object
              properties:
                domainType:
                  type: string
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      list:
                        type: array
                        items:
                          type: object
                          properties:
                            demo:
                              type: string
                            domainCategory:
                              type: string
                            total:
                              type: integer

                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v3/market/domain/auction/inscription_info:
    post:
      summary:
        Retrieve inscription information, including brc20, names, collection.
        It is necessary to first determine the inscription type before calling
        the relevant services.
      tags:
        - MarketPlace-Domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketInscriptionInfoRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketInscriptionInfoResponse"
  /v3/market/domain/auction/inscription_info_list:
    post:
      summary: Get the basic listing information of the specified inscription list
      tags:
        - MarketPlace-Domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketInscriptionInfoListRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketInscriptionInfoListResponse"
  /v3/market/domain/auction/list:
    post:
      summary: Retrieve the list information of the market.
      tags:
        - MarketPlace-Domain
      requestBody:
        content:
          application/json:
            schema:
              required:
                - filter
                - sort
                - start
                - limit
              type: object
              properties:
                filter:
                  required:
                    - nftType
                  type: object
                  properties:
                    nftType:
                      enum:
                        - brc20
                        - domain
                        - collection
                      type: string
                    address:
                      type: string
                    tick:
                      type: string
                    minPrice:
                      type: number
                    maxPrice:
                      type: number
                    nftConfirm:
                      type: boolean
                    isEnd:
                      description: Whether order ends
                      type: boolean
                    domainType:
                      enum:
                        - sats
                        - unisat
                        - btc
                        - xbt
                        - ord
                        - gm
                        - bitmap
                        - x
                      type: string
                    domainMinLength:
                      minimum: 0
                      exclusiveMinimum: true
                      type: number
                    domainMaxLength:
                      type: integer
                    domainCategory:
                      type: string
                    domainFuzzy:
                      description: Fuzzy domain name search
                      type: string
                    collectionId:
                      type: string
                    collectionFuzzy:
                      description: Fuzzy collection name search
                      type: string
                    all:
                      description: Ignore start and limit and return all collection data
                      type: boolean
                  additionalProperties: false
                sort:
                  type: object
                  properties:
                    unitPrice:
                      enum:
                        - 1
                        - -1
                      type: number
                    onSaleTime:
                      enum:
                        - 1
                        - -1
                      type: number
                    initPrice:
                      enum:
                        - 1
                        - -1
                      type: number
                    inscriptionNumber:
                      enum:
                        - 1
                        - -1
                      type: number
                  additionalProperties: false
                start:
                  description: The data is looked up from start
                  type: number
                limit:
                  maximum: 100
                  exclusiveMaximum: true
                  description: Limit the amount of data
                  type: number
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    required:
                      - list
                      - total
                    type: object
                    properties:
                      list:
                        type: array
                        items:
                          required:
                            - inscriptionId
                          type: object
                          properties:
                            auctionId:
                              type: string
                              nullable: true
                            inscriptionId:
                              type: string
                            inscriptionNumber:
                              type: number
                              nullable: true
                            marketType:
                              type: string
                              nullable: true
                            address:
                              type: string
                              nullable: true
                            price:
                              type: number
                              nullable: true
                            notSupport:
                              description: Domain name content support on sale
                              type: boolean
                            verification:
                              description: Whether the collection is validated
                              type: boolean
                            nftType:
                              type: string
                              nullable: true
                            tick:
                              description: Brc20 field
                              type: string
                              nullable: true
                            limit:
                              description: Brc20 field
                              type: number
                              nullable: true
                            amount:
                              description: Brc20 field
                              type: number
                              nullable: true
                            unitPrice:
                              description: Brc20 field
                              type: number
                              nullable: true
                            collectionId:
                              description: Collection field
                              type: string
                              nullable: true
                            contentType:
                              description: Collection field
                              type: string
                              nullable: true
                            contentBody:
                              description: Collection field
                              type: string
                              nullable: true
                            collectionItemName:
                              description: Collection field
                              type: string
                              nullable: true
                            collectionHighResImgUrl:
                              description: Collection field
                              type: string
                              nullable: true
                            collectionName:
                              description: Collection field
                              type: string
                              nullable: true
                            notOnSale:
                              description: Collection field
                              type: boolean
                              nullable: true
                            domain:
                              description: Domain field
                              type: string
                              nullable: true
                            domainHex:
                              description: Domain field
                              type: string
                              nullable: true
                            domainType:
                              enum:
                                - sats
                                - unisat
                                - btc
                                - xbt
                                - ord
                                - gm
                                - bitmap
                                - x
                                - null
                              description: Domain field
                              type: string
                              nullable: true
                          additionalProperties: false
                      total:
                        type: number
                      timestamp:
                        type: number
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v3/market/domain/auction/actions:
    post:
      summary: Get information on listings, delistings, and sales.
      tags:
        - MarketPlace-Domain
      requestBody:
        content:
          application/json:
            schema:
              required:
                - filter
                - start
                - limit
              type: object
              properties:
                filter:
                  type: object
                  properties:
                    nftType:
                      enum:
                        - brc20
                        - collection
                        - domain
                      type: string
                    address:
                      type: string
                    inscriptionId:
                      type: string
                    event:
                      enum:
                        - Cancel
                        - Claim
                        - Listed
                        - Sold
                        - Updated
                      description: "Event type: Cancel, Listed, Sold, Updated"
                      type: string
                    tick:
                      type: string
                    domainType:
                      type: string
                    collectionId:
                      type: string
                  additionalProperties: false
                start:
                  type: number
                limit:
                  maximum: 100
                  exclusiveMaximum: true
                  type: number
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    required:
                      - total
                    type: object
                    properties:
                      list:
                        type: array
                        items:
                          required:
                            - auctionId
                            - inscriptionId
                            - inscriptionNumber
                            - event
                            - price
                            - from
                            - to
                            - timestamp
                          type: object
                          properties:
                            auctionId:
                              type: string
                            inscriptionId:
                              type: string
                            inscriptionNumber:
                              type: number
                            event:
                              enum:
                                - Listed
                                - Sold
                                - Cancel
                                - Claim
                                - Updated
                              type: string
                            price:
                              type: number
                            from:
                              type: string
                            to:
                              type: string
                              nullable: true
                            timestamp:
                              type: number
                            nftConfirmNum:
                              type: number
                            nftType:
                              enum:
                                - brc20
                                - domain
                                - collection
                              type: string
                            endMsg:
                              description: An error message generated by the order
                              type: string
                              nullable: true
                            newest:
                              description: The update order generates multiple events
                              type: boolean
                            name:
                              description: Brc20 filed
                              type: string
                              nullable: true
                            unitPrice:
                              description: Brc20 filed
                              type: number
                              nullable: true
                            amount:
                              description: Brc20 filed
                              type: number
                              nullable: true
                            domain:
                              description: Domain filed
                              type: string
                              nullable: true
                            domainType:
                              enum:
                                - sats
                                - unisat
                                - btc
                                - xbt
                                - ord
                                - gm
                                - bitmap
                                - x
                                - null
                              description: Domain filed
                              type: string
                              nullable: true
                            domainCategorys:
                              description: Domain filed
                              type: array
                              items:
                                enum:
                                  - Keyboard
                                  - Non Keyboard
                                  - 1-99
                                  - 3D
                                  - 4D
                                  - 5D
                                  - Single Emoji
                                  - Multi Emoji
                                  - Common Word
                                  - 1 Letter + 1 Number
                                  - 2 Letters
                                  - 3 Letters
                                  - Numbers
                                type: string
                              nullable: true
                            collectionId:
                              description: Collection filed
                              type: string
                              nullable: true
                            collectionItemName:
                              description: Collection filed
                              type: string
                              nullable: true
                            contentType:
                              description: Collection filed
                              type: string
                              nullable: true
                            contentBody:
                              description: Collection filed
                              type: string
                              nullable: true
                            attributes:
                              description: Collection filed
                              type: array
                              items:
                                type: object
                                properties:
                                  trait_type:
                                    type: string
                                  value:
                                    type: string
                                additionalProperties: false
                              nullable: true
                          additionalProperties: false
                      total:
                        type: number
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v3/market/domain/auction/create_put_on:
    post:
      summary: Create listing order.
      tags:
        - MarketPlace-Domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketCreatePutOnRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketCreatePutOnResponse"
  /v3/market/domain/auction/confirm_put_on:
    post:
      summary: Confirm listing order.
      tags:
        - MarketPlace-Domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketConfirmPutOnRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketConfirmPutOnResponse"
  /v3/market/domain/auction/create_bid_prepare:
    post:
      summary: Return params before creating purchase order.
      tags:
        - MarketPlace-Domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketCreateBidPrepareRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketCreateBidPrepareResponse"
  /v3/market/domain/auction/create_bid:
    post:
      summary: Create purchase order.
      tags:
        - MarketPlace-Domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketCreateBidRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketCreateBidResponse"
  /v3/market/domain/auction/confirm_bid:
    post:
      summary: Confirm purchase order.
      tags:
        - MarketPlace-Domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketConfirmBidRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketConfirmBidResponse"
  /v3/market/domain/auction/create_put_off:
    post:
      summary: Create delisting order.
      tags:
        - MarketPlace-Domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketCreatePutOffRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketCreatePutOffResponse"
  /v3/market/domain/auction/confirm_put_off:
    post:
      summary: Confirm delisting order.
      tags:
        - MarketPlace-Domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketConfirmPutOffRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketConfirmPutOffResponse"
  /v3/market/domain/auction/create_modify_price:
    post:
      summary: Create the order for price adjustment.
      tags:
        - MarketPlace-Domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketCreateModifyPriceRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketCreateModifyPriceResponse"
  /v3/market/domain/auction/confirm_modify_price:
    post:
      summary: Confirm the order for price adjustment.
      tags:
        - MarketPlace-Domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarketConfirmModifyPriceRequest"
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketConfirmModifyPriceResponse"

  /v1/collection-indexer/collection/status:
    get:
      summary: Return the overall information of the collection service
      tags:
        - Collection-Indexer
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      newestHeight:
                        type: number
                      lastHandledHeight:
                        type: number
                      totalCollection:
                        type: number
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/collection-indexer/collection/list:
    get:
      summary: Return the overall collection list information
      tags:
        - Collection-Indexer
      parameters:
        - schema:
            type: number
          in: query
          name: start
          required: true
        - schema:
            type: number
          in: query
          name: limit
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      total:
                        type: number
                      list:
                        type: array
                        items:
                          type: object
                          properties:
                            height:
                              type: number
                            holders:
                              type: number
                            totalItems:
                              type: number
                          additionalProperties: false
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/collection-indexer/collection/{collectionId}/info:
    get:
      summary: Return the details of the specified collection
      tags:
        - Collection-Indexer
      parameters:
        - schema:
            type: number
          in: query
          name: height
          required: false
        - schema:
            type: string
          in: path
          name: collectionId
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      height:
                        type: number
                      holders:
                        type: number
                      totalItems:
                        type: number
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/collection-indexer/collection/{collectionId}/holders:
    get:
      summary: Return the owner information of a specific collection
      tags:
        - Collection-Indexer
      parameters:
        - schema:
            type: number
          in: query
          name: height
          required: false
        - schema:
            type: number
          in: query
          name: start
          required: true
        - schema:
            type: number
          in: query
          name: limit
          required: true
        - schema:
            type: string
          in: path
          name: collectionId
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      total:
                        type: number
                      list:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                            count:
                              type: number
                          additionalProperties: false
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/collection-indexer/address/{address}/collection/list:
    get:
      summary: Return the collection summary for the specified address.
      tags:
        - Collection-Indexer
      parameters:
        - schema:
            type: number
          in: query
          name: height
          required: false
        - schema:
            type: number
          in: query
          name: start
          required: true
        - schema:
            type: number
          in: query
          name: limit
          required: true
        - schema:
            type: string
          in: path
          name: address
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      total:
                        type: number
                      list:
                        type: array
                        items:
                          type: object
                          properties:
                            count:
                              type: number
                            name:
                              type: string
                            iconInscription:
                              type: string
                            iconUrl:
                              type: string
                            iconContentType:
                              type: string
                            supply:
                              type: string
                            collectionId:
                              type: string
                            desc:
                              type: string
                            twitter:
                              type: string
                            discord:
                              type: string
                            website:
                              type: string
                          additionalProperties: false
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/collection-indexer/collection/{collectionId}/items:
    get:
      summary: Return the list of inscriptions for a specific collection.
      tags:
        - Collection-Indexer
      parameters:
        - schema:
            type: number
          in: query
          name: height
          required: false
        - schema:
            type: number
          in: query
          name: start
          required: true
        - schema:
            type: number
          in: query
          name: limit
          required: true
        - schema:
            type: string
          in: path
          name: collectionId
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      total:
                        type: number
                      list:
                        type: array
                        items:
                          type: object
                          properties:
                            inscriptionId:
                              type: string
                            collectionId:
                              type: string
                            collectionItemName:
                              type: string
                            inscriptionIndex:
                              type: number
                            inscriptionNumber:
                              type: number
                            inscriptionName:
                              type: string
                            contentBody:
                              type: string
                            contentLength:
                              type: number
                            contentType:
                              type: string
                            height:
                              type: number
                            holders:
                              type: number
                            totalItems:
                              type: number
                          additionalProperties: false
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/collection-indexer/address/{address}/collection/{collectionId}/summary:
    get:
      summary: Return the summary of a specific collection for the designated address.
      tags:
        - Collection-Indexer
      parameters:
        - schema:
            type: number
          in: query
          name: height
          required: false
        - schema:
            type: string
          in: path
          name: address
          required: true
        - schema:
            type: string
          in: path
          name: collectionId
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      count:
                        type: number
                      name:
                        type: string
                      iconInscription:
                        type: string
                      iconUrl:
                        type: string
                      iconContentType:
                        type: string
                      supply:
                        type: string
                      collectionId:
                        type: string
                      desc:
                        type: string
                      twitter:
                        type: string
                      discord:
                        type: string
                      website:
                        type: string
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/collection-indexer/address/{address}/collection/{collectionId}/items:
    get:
      summary: Return the list of inscriptions for a specific collection at a
        designated address.
      tags:
        - Collection-Indexer
      parameters:
        - schema:
            type: number
          in: query
          name: height
          required: false
        - schema:
            type: number
          in: query
          name: start
          required: true
        - schema:
            type: number
          in: query
          name: limit
          required: true
        - schema:
            type: string
          in: path
          name: address
          required: true
        - schema:
            type: string
          in: path
          name: collectionId
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      total:
                        type: number
                      list:
                        type: array
                        items:
                          type: object
                          properties:
                            inscriptionId:
                              type: string
                            collectionId:
                              type: string
                            collectionItemName:
                              type: string
                            inscriptionIndex:
                              type: number
                            inscriptionNumber:
                              type: number
                            inscriptionName:
                              type: string
                            contentBody:
                              type: string
                            contentLength:
                              type: number
                            contentType:
                              type: string
                            height:
                              type: number
                            holders:
                              type: number
                            totalItems:
                              type: number
                          additionalProperties: false
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/collection-indexer/inscription/{inscriptionId}/collection/list:
    get:
      summary: Return the collection list where a specific inscription is located.
      tags:
        - Collection-Indexer
      parameters:
        - schema:
            type: string
          in: path
          name: inscriptionId
          required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      total:
                        type: number
                      list:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            iconInscription:
                              type: string
                            iconUrl:
                              type: string
                            iconContentType:
                              type: string
                            supply:
                              type: string
                            collectionId:
                              type: string
                            desc:
                              type: string
                            twitter:
                              type: string
                            discord:
                              type: string
                            website:
                              type: string
                          additionalProperties: false
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/collection-indexer/collection/add_items:
    post:
      summary: Add collection inscription.
      tags:
        - Collection-Indexer
      requestBody:
        content:
          application/json:
            schema:
              required:
                - collectionId
                - items
              type: object
              properties:
                collectionId:
                  type: string
                items:
                  type: array
                  items:
                    required:
                      - inscriptionId
                      - itemName
                    type: object
                    properties:
                      inscriptionId:
                        type: string
                      itemName:
                        type: string
                      attributes:
                        type: array
                        items:
                          required:
                            - traitType
                            - value
                          type: object
                          properties:
                            traitType:
                              type: string
                            value:
                              type: string
                          additionalProperties: false
                    additionalProperties: false
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties: {}
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/collection-indexer/collection/remove_items:
    post:
      summary: Remove collection inscription.
      tags:
        - Collection-Indexer
      requestBody:
        content:
          application/json:
            schema:
              required:
                - collectionId
                - inscriptionIds
              type: object
              properties:
                collectionId:
                  type: string
                inscriptionIds:
                  type: array
                  items:
                    type: string
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  msg:
                    type: string
                  data:
                    type: object
                    properties: {}
                    additionalProperties: false
                required:
                  - msg
                  - code
                  - data
  /v1/indexer/runes/status:
    get:
      tags:
        - Runes
      summary: Get runes status
      description: "Get runes global status"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  msg:
                    type: string
                    example: ""
                  data:
                    $ref: "#/components/schemas/RuneStatus"

  /v1/indexer/runes/info-list:
    get:
      tags:
        - Runes
      summary: Get runes list
      description: ""
      parameters:
        - name: rune
          in: query
          description: "search by rune spacedRune"
          required: false
          schema:
            type: string
            example: 0
        - name: sort
          in: query
          description: "by (holders/transactions/timestamp)"
          required: false
          schema:
            type: string
            example: timestamp
        - name: complete
          in: query
          description: "complete type(yes/no)"
          required: false
          schema:
            type: string
            example: no
        - name: start
          in: query
          description: "default=0"
          required: false
          schema:
            type: integer
            example: 0
        - name: limit
          in: query
          description: "required,min=1,max=500,default=10"
          schema:
            type: integer
            example: 10
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  msg:
                    type: string
                    example: ""
                  data:
                    type: object
                    properties:
                      total:
                        type: integer
                        example: 3045
                      start:
                        type: integer
                        example: 0
                      detail:
                        type: array
                        items:
                          $ref: "#/components/schemas/RuneEntry"

  /v1/indexer/runes/{runeid}/info:
    get:
      tags:
        - Runes
      summary: Get rune info by runeid
      description: ""
      parameters:
        - name: runeid
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  msg:
                    type: string
                    example: ""
                  data:
                    $ref: "#/components/schemas/RuneEntry"

  /v1/indexer/runes/{runeid}/holders:
    get:
      tags:
        - Runes
      summary: Get runes holders by runeid
      description: ""
      parameters:
        - name: runeid
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: start
          description: Start offset
          in: query
          required: false
          schema:
            type: integer
          example: 0
        - name: limit
          description: Number of inscriptions returned
          in: query
          required: false
          schema:
            type: integer
          example: 16
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  msg:
                    type: string
                    example: ""
                  data:
                    type: object
                    properties:
                      total:
                        type: integer
                        example: 1
                      start:
                        type: integer
                        example: 0
                      detail:
                        type: array
                        items:
                          $ref: "#/components/schemas/RuneHolder"

  /v1/indexer/address/{address}/runes/balance-list:
    get:
      tags:
        - Runes
      summary: Get runes balance list by address
      description: ""
      parameters:
        - name: address
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: start
          description: Start offset
          in: query
          required: false
          schema:
            type: integer
          example: 0
        - name: limit
          description: Number of items returned
          in: query
          required: false
          schema:
            type: integer
          example: 16
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  msg:
                    type: string
                    example: ""
                  data:
                    properties:
                      start:
                        type: integer
                      total:
                        type: integer
                      detail:
                        type: array
                        items:
                          $ref: "#/components/schemas/RunesBalance"

  /v1/indexer/address/{address}/runes/{runeid}/balance:
    get:
      tags:
        - Runes
      summary: Get runes balance by address and runeid
      description: ""
      parameters:
        - name: address
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: runeid
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  msg:
                    type: string
                    example: ""
                  data:
                    $ref: "#/components/schemas/RunesBalance"

  /v1/indexer/runes/utxo/{txid}/{index}/balance:
    get:
      tags:
        - Runes
      summary: Get runes balance by utxo
      description: ""
      parameters:
        - name: txid
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: index
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  msg:
                    type: string
                    example: ""
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/RunesBalance"

  /v1/indexer/address/{address}/runes/{runeid}/utxo:
    get:
      tags:
        - Runes
      summary: Get utxo runes balance by address and runeid
      description: ""
      parameters:
        - name: address
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: runeid
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: "default=0"
          required: false
          schema:
            type: integer
            example: 0
        - name: limit
          in: query
          description: "required,min=1,max=500,default=10"
          schema:
            type: integer
            example: 10
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  msg:
                    type: string
                    example: ""
                  data:
                    properties:
                      start:
                        type: integer
                      total:
                        type: integer
                      utxo:
                        type: array
                        items:
                          $ref: "#/components/schemas/RuneUtxo"

  /v1/indexer/runes/event:
    get:
      tags:
        - Runes
      description: Get the full history events of Runes.
      parameters:
        - name: rune
          description: Filter by rune
          in: query
          required: false
          schema:
            type: string
        - name: type
          description: Filter by history type
          in: query
          required: false
          schema:
            type: string
            enum:
              - etch
              - mint
              - burn
              - receive
              - send
        - name: address
          description: Filter by address
          in: query
          required: false
          schema:
            type: string
        - name: height
          description: Filter by block height
          in: query
          required: false
          schema:
            type: integer
        - name: txid
          description: Filter by tx
          in: query
          required: false
          schema:
            type: string
        - name: start
          description: Start offset
          in: query
          required: false
          schema:
            type: integer
          example: 0
        - name: limit
          description: Number of inscriptions returned
          in: query
          required: false
          schema:
            type: integer
          example: 16
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    format: int32
                    enum:
                      - 0
                      - -1
                  msg:
                    type: string
                    example: OK
                  data:
                    properties:
                      detail:
                        type: array
                        items:
                          $ref: "#/components/schemas/RunesEventItem"
                      start:
                        type: integer
                      total:
                        type: integer
        "401":
          description: Invalid API Key

components:
  schemas:
    BlockInfo:
      type: object
      properties:
        height:
          type: integer
        version:
          type: string
        auxpow:
          type: boolean
        id:
          type: string
        prev:
          type: string
        next:
          type: string
        merkle:
          type: string
        ntx:
          type: integer
        inSatoshi:
          type: integer
        outSatoshi:
          type: integer
        coinbaseOut:
          type: number
        timestamp:
          type: integer
        bits:
          type: number
        size:
          type: integer
    OrderCreateParams:
      type: object
      properties:
        receiveAddress:
          type: string
          description: Bitcoin address to receive the inscriptions
        feeRate:
          type: number
          format: float
          description: The fee rate of transaction
          example: 1
        outputValue:
          type: integer
          format: int32
          description: The balance of inscription
          example: 546
        files:
          type: array
          items:
            type: object
            properties:
              filename:
                type: string
              dataURL:
                type: string
          example:
            - filename: 1000.sats
              dataURL: >-
                data:text/plain;charset=utf-8;base64,eyJwIjoic25zIiwib3AiOiJyZWciLCJuYW1lIjoiMTAwMDAuc2F0cyJ9
        devAddress:
          type: string
          description: Developer address to receive extra fee
        devFee:
          type: integer
          format: int32
          description: Extra fee to pay to developer's address
    OrderCreateBRC20DeployParams:
      type: object
      properties:
        receiveAddress:
          type: string
          description: Bitcoin address to receive the inscriptions
          example: ""
        feeRate:
          type: number
          format: float
          description: The fee rate of transaction
          example: 1
        outputValue:
          type: integer
          format: int32
          description: The balance of inscription
          example: 546
        devAddress:
          type: string
          description: Developer address to receive extra fee
          example: ""
        devFee:
          type: integer
          format: int32
          description: Extra fee to pay to developer's address
        brc20Ticker:
          type: string
          description: tick in brc20-deploy
          example: ""
        brc20Max:
          type: string
          description: max in brc20-deploy
          example: ""
        brc20Limit:
          type: string
          description: lim in brc20-deploy
          example: ""
    OrderCreateBRC20MintParams:
      type: object
      properties:
        receiveAddress:
          type: string
          description: Bitcoin address to receive the inscriptions
          example: ""
        feeRate:
          type: number
          format: float
          description: The fee rate of transaction
          example: 1
        outputValue:
          type: integer
          format: int32
          description: The balance of inscription
          example: 546
        devAddress:
          type: string
          description: Developer address to receive extra fee
          example: ""
        devFee:
          type: integer
          format: int32
          description: Extra fee to pay to developer's address
        brc20Ticker:
          type: string
          description: tick in brc20-mint
          example: ""
        brc20Amount:
          type: string
          description: amt in brc20-mint
          example: ""
        count:
          type: integer
          format: int32
          description: Repetition count
          example: 1
    OrderCreateBRC20TransferParams:
      type: object
      properties:
        receiveAddress:
          type: string
          description: Bitcoin address to receive the inscriptions
          example: ""
        feeRate:
          type: number
          format: float
          description: The fee rate of transaction
          example: 1
        outputValue:
          type: integer
          format: int32
          description: The balance of inscription
          example: 546
        devAddress:
          type: string
          description: Developer address to receive extra fee
          example: ""
        devFee:
          type: integer
          format: int32
          description: Extra fee to pay to developer's address
        brc20Ticker:
          type: string
          description: tick in brc20-transfer
          example: ""
        brc20Amount:
          type: string
          description: amt in brc20-transfer
          example: ""
    OrderCreateBRC205ByteMintParams:
      type: object
      properties:
        deployerAddress:
          type: string
          description: The deployer address that deployed the ticker
          example: ""
        deployerPubkey:
          type: string
          description: The deployer pubkey that deployed the ticker
          example: ""
        receiveAddress:
          type: string
          description: Bitcoin address to receive the inscriptions
          example: ""
        feeRate:
          type: number
          format: float
          description: The fee rate of transaction
          example: 1
        outputValue:
          type: integer
          format: int32
          description: The balance of inscription
          example: 546
        devAddress:
          type: string
          description: Developer address to receive extra fee
          example: ""
        devFee:
          type: integer
          format: int32
          description: Extra fee to pay to developer's address
        brc20Ticker:
          type: string
          description: tick in brc20-mint
          example: ""
        brc20Amount:
          type: string
          description: amt in brc20-mint
          example: ""
    OrderRequestCommitBRC205ByteMintParams:
      type: object
      properties:
        orderId:
          type: string
          description: orderId
          example: ""
    OrderRequestCommitBRC205ByteMintResponse:
      type: object
      properties:
        psbtHex:
          type: string
          description: psbt hex string
          example: ""
        inputsToSign:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
              signingIndexes:
                type: array
                items:
                  type: integer
    OrderSignCommitBRC205ByteMintParams:
      type: object
      properties:
        orderId:
          type: string
          description: orderId
          example: ""
        psbt:
          type: string
          description: psbt hex string
          example: ""
    OrderSignCommitBRC205ByteMintResponse:
      type: object
      properties:
        psbtHex:
          type: string
          description: psbt hex string
          example: ""
        inputsToSign:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
              signingIndexes:
                type: array
                items:
                  type: integer
    OrderSignRevealBRC205ByteMintParams:
      type: object
      properties:
        orderId:
          type: string
          description: orderId
          example: ""
        psbt:
          type: string
          description: psbt hex string
          example: ""
    OrderSignRevealBRC205ByteMintResponse:
      type: object
      properties:
        inscriptionId:
          type: string
          description: inscriptionId
          example: ""
    OrderCreateRunesEtchParams:
      type: object
      properties:
        receiveAddress:
          type: string
          description: Bitcoin address to receive the inscriptions
          example: ""
        feeRate:
          type: number
          format: float
          description: The fee rate of transaction
          example: 1
        outputValue:
          type: integer
          format: int32
          description: The balance of inscription
          example: 546
        files:
          type: array
          items:
            type: object
            properties:
              filename:
                type: string
              dataURL:
                type: string
              runes_etch:
                type: object
                properties:
                  etching:
                    type: object
                    properties:
                      spacedRune:
                        type: string
                      symbol:
                        type: string
                      divisibility:
                        type: integer
                      premine:
                        type: string
                      terms:
                        type: object
                        properties:
                          amount:
                            type: string
                          cap:
                            type: string
                          height:
                            type: array
                            items:
                              type: integer
                          offset:
                            type: array
                            items:
                              type: integer

          example:
            - filename: logo
              dataURL: >-
                data:text/plain;charset=utf-8;base64,eyJwIjoic25zIiwib3AiOiJyZWciLCJuYW1lIjoiMTAwMDAuc2F0cyJ9
              runes_etch:
                etching:
                  spacedRune: AAAABBBBB
                  symbol: G
                  divisibility: 0
                  premine: 100
                  terms:
                    amount: 1000
                    cap: 21000000
                    height: [840000, 880000]
                    offset: [0, 10000]
        devAddress:
          type: string
          description: Developer address to receive extra fee
        devFee:
          type: integer
          format: int32
          description: Extra fee to pay to developer's address

    OrderCreateRunesMintParams:
      type: object
      properties:
        receiveAddress:
          type: string
          description: Bitcoin address to receive the inscriptions
          example: ""
        feeRate:
          type: number
          format: float
          description: The fee rate of transaction
          example: 1
        outputValue:
          type: integer
          format: int32
          description: The balance of inscription
          example: 546
        runeid:
          type: string
          example: 848484:10
        count:
          type: integer
          example: 2
        devAddress:
          type: string
          description: Developer address to receive extra fee
        devFee:
          type: integer
          format: int32
          description: Extra fee to pay to developer's address

    LocalPushParams:
      type: object
      properties:
        txHex:
          type: string
          description: rawtx
          example: ""

    LocalPushtxsParams:
      type: object
      properties:
        txsHex:
          type: array
          items:
            type: string
            description: rawtx
            example: ""

    Order:
      type: object
      properties:
        orderId:
          type: string
          example: ""
        status:
          type: string
          description: Order Status
          example: pending
          enum:
            - pending
            - inscribing
            - minted
        payAddress:
          type: string
          description: Pay to this address to start inscribing
          example: ""
        receiveAddress:
          type: string
          description: Bitcoin address to receive the inscriptions
          example: ""
        amount:
          type: integer
          description: The BTC amount (in satoshis) need to pay
          example: 3000
        paidAmount:
          type: integer
          description: The paid BTC amount (in satoshis)
        outputValue:
          type: integer
          description: The outputValue of each inscription
        feeRate:
          type: number
          description: The feeRate of inscribing transactions
        minerFee:
          type: number
          description: The miner fee of this order
        serviceFee:
          type: number
          description: The service fee of this order
        devFee:
          type: number
          description: The developer fee of this order
        files:
          type: array
          items:
            type: object
            properties:
              filename:
                type: string
                example: 10000.sats
              inscriptionId:
                type: string
                example: ""
              status:
                type: string
                enum:
                  - pending
                  - unconfirmed
                  - confirmed
        count:
          type: integer
          example: 1
          description: The total inscriptions count
        pendingCount:
          type: integer
          description: The pending inscriptions count
          example: 1
        unconfirmedCount:
          type: integer
          format: int32
          description: The unconfirmed inscriptions count
          example: 0
        confirmedCount:
          type: integer
          format: int32
          description: The confirmed inscriptions count
          example: 0
        createTime:
          type: integer
          example: 1693439128100
        refundTxid:
          type: string
          example: ""
        refundAmount:
          type: integer
        refundFeeRate:
          type: number
    BRC20InfoItem:
      type: object
      properties:
        ticker:
          type: string
        creator:
          type: string
        totalMinted:
          type: string
        confirmedMinted:
          type: string
        confirmedMinted1h:
          type: string
        confirmedMinted24h:
          type: string
        completeBlocktime:
          type: integer
        completeHeight:
          type: integer
        inscriptionNumberEnd:
          type: integer
        inscriptionNumberStart:
          type: integer
        minted:
          type: string
        mintTimes:
          type: integer
        historyCount:
          type: integer
        holdersCount:
          type: integer
        txid:
          type: string
        deployHeight:
          type: integer
        deployBlocktime:
          type: integer
        inscriptionId:
          type: string
        inscriptionNumber:
          type: integer
        max:
          type: string
        decimal:
          type: integer
        limit:
          type: string
    BRC20HistoryInscription:
      type: object
      properties:
        confirmations:
          type: integer
        data:
          type: object
          properties:
            amt:
              type: string
            decimal:
              type: string
            lim:
              type: string
            max:
              type: string
            minted:
              type: string
            op:
              type: string
            tick:
              type: string
            to:
              type: string
        inscriptionId:
          type: string
        inscriptionNumber:
          type: integer
    BRC20HistoryItem:
      type: object
      properties:
        valid:
          type: boolean
        type:
          type: string
        from:
          type: string
        to:
          type: string
        amount:
          type: string
        overallBalance:
          type: string
        availableBalance:
          type: string
        transferBalance:
          type: string
        inscriptionId:
          type: string
        inscriptionNumber:
          type: integer
        height:
          type: integer
        blockhash:
          type: string
        blocktime:
          type: integer
        txIdx:
          type: integer
        txid:
          type: string
        satoshi:
          type: integer
        offset:
          type: integer
    ModuleHistoryItem:
      type: object
      properties:
        type:
          type: string
        valid:
          type: boolean
        txid:
          type: string
        idx:
          type: number
        vout:
          type: number
        offset:
          type: integer
        inscriptionNumber:
          type: integer
        inscriptionId:
          type: string
        contentType:
          type: string
        contentBody:
          type: string
        oldSatPoint:
          type: string
        newSatPoint:
          type: string
        from:
          type: string
        to:
          type: string
        satoshi:
          type: integer
        data:
          type: object
          properties:
            tick:
              type: string
            amount:
              type: string
        height:
          type: integer
        txidx:
          type: integer
        blockhash:
          type: string
        blocktime:
          type: integer

    TxHistoryItem:
      type: object
      properties:
        txid:
          type: string
        nIn:
          type: integer
        nOut:
          type: integer
        inSatoshi:
          type: integer
        outSatoshi:
          type: integer
        locktime:
          type: integer
        size:
          type: integer
        witOffset:
          type: integer
        height:
          type: integer
        idx:
          type: integer
        blkid:
          type: string
        confirmations:
          type: integer
        timestamp:
          type: integer
    InscriptionItem:
      type: object
      properties:
        inscriptionId:
          type: string
        inscriptionNumber:
          type: integer
        isBRC20:
          type: boolean
        moved:
          type: boolean
        offset:
          type: integer
    InscriptionData:
      type: object
      properties:
        address:
          type: string
        inscriptionId:
          type: string
        inscriptionNumber:
          type: integer
        contentType:
          type: string
        contentLength:
          type: integer
        offset:
          type: integer
        timestamp:
          type: integer
        utxo:
          $ref: "#/components/schemas/UTXO"
    InscriptionEvent:
      type: object
      properties:
        isTransfer:
          type: boolean
          description: "false: a mint event; true: a transfer event"
        inscriptionId:
          type: string
        inscriptionNumber:
          type: integer
        address:
          type: string
          description: current address
        contentBody:
          type: string
          description: only present when it's a mint event
        contentType:
          type: string
          description: only present when it's a mint event
        inSatoshi:
          type: integer
          description: total input satoshi in tx
        outSatoshi:
          type: integer
          description: total output satoshi in tx
        pkScript:
          type: string
        satoshi:
          type: integer
          description: satoshi in inscription
        timestamp:
          type: integer
          description: block timestamp
        txid:
          type: string
          description: inscription genesis txid
        i:
          type: integer
          description: inscription genesis vout
        vout:
          type: integer
          description: tx vout
        sequence:
          type: integer
        height:
          type: integer
        txidx:
          type: integer
          description: tx index in block
    UTXO:
      type: object
      properties:
        address:
          type: string
        codeType:
          type: integer
        height:
          type: integer
        idx:
          type: integer
        inscriptions:
          type: array
          items:
            $ref: "#/components/schemas/InscriptionItem"
        isOpInRBF:
          type: boolean
          example: false
        satoshi:
          type: integer
          example: 10000
        scriptPk:
          type: string
        scriptType:
          type: string
        txid:
          type: string
        vout:
          type: integer
          example: 0
    OrderSummary:
      type: object
      properties:
        orderCount:
          type: object
          properties:
            total:
              type: integer
            pendingCount:
              type: integer
            inscribingCount:
              type: integer
            mintedCount:
              type: integer
            closedCount:
              type: integer
            refundedCount:
              type: integer
    RuneUtxo:
      type: object
      properties:
        address:
          type: string
        satoshi:
          type: integer
          example: 10000
        scriptPk:
          type: string
        txid:
          type: string
        vout:
          type: integer
          example: 0
        runes:
          type: array
          items:
            $ref: "#/components/schemas/RunesBalance"
    RunesEventItem:
      type: object
      properties:
        type:
          type: string
          enum:
            - etch
            - mint
            - burn
            - send
            - receive
        address:
          type: string
        amount:
          type: string
        height:
          type: integer
        txidx:
          type: integer
        txid:
          type: string
        timestamp:
          type: integer
        rune:
          type: string
        runeid:
          type: string
    RunesBalance:
      type: object
      properties:
        amount:
          type: string
          example: "10000"
        runeid:
          type: string
          example: "2584327:44"
        rune:
          type: string
          example: "AAAAAAAAAAAAAB"
        spacedRune:
          type: string
          example: "AAAAA•AAA•AAAAA•B"
        symbol:
          type: string
          example: "G"
        divisibility:
          type: integer
          example: 0
    RuneHolder:
      type: object
      properties:
        address:
          type: string
        amount:
          type: string
          example: "10000"
    RuneEntry:
      type: object
      properties:
        runeid:
          type: string
          example: "2583283:1333"
        rune:
          type: string
          example: "UNCOMMONGOODS"
        spacedRune:
          type: string
          example: "UNCOMMON•GOODS"
        number:
          type: integer
          format: uint64
          example: 0
        height:
          type: integer
          format: uint64
          example: 2583283
        txidx:
          type: integer
          format: uint64
          example: 1333
        timestamp:
          type: integer
          example: 1623423423
        divisibility:
          type: integer
          format: uint8
          example: 2
        symbol:
          type: string
          format: Option<char>
          example: "G"
        etching:
          type: string
          example: "7cd19fef13aa2924d4446b1a86c1904e02e46d16630370bc6de86f769692e242"
        premine:
          type: string
          example: "10000"
        terms:
          type: object
          properties:
            amount:
              type: string
              example: "1000000"
            cap:
              type: string
              example: "234000"
            heightStart:
              type: integer
              example: 245000
            heightEnd:
              type: integer
              example: 2480000
            offsetStart:
              type: integer
              example: null
            offsetEnd:
              type: integer
              example: null

        mints:
          type: string
          example: "500"
        burned:
          type: string
          format: u128
          example: "1000"
        holders:
          type: integer
          example: 1000
        transactions:
          type: integer
          example: 1000
        supply:
          type: string
          example: "500010000"
        start:
          type: integer
        end:
          type: integer
        mintable:
          type: boolean
        remaining:
          type: string

    RuneStatus:
      type: object
      properties:
        bestHeight:
          type: integer
        runes:
          type: integer
          example: 100
        minimumRune:
          type: string
          example: "AAAAAAAAAAAA"
        halvingBlockCount:
          type: integer
          example: 100
    MarketInscriptionInfoRequest:
      required:
        - inscriptionId
      type: object
      properties:
        inscriptionId:
          type: string
      additionalProperties: false
    MarketInscriptionInfoResponse:
      type: object
      properties:
        code:
          type: number
        msg:
          type: string
        data:
          required:
            - inscriptionId
          type: object
          properties:
            auctionId:
              type: string
              nullable: true
            inscriptionId:
              type: string
            inscriptionNumber:
              type: number
              nullable: true
            marketType:
              type: string
              example: fixedPrice
              nullable: true
            address:
              type: string
              nullable: true
            price:
              type: number
              nullable: true
            notSupport:
              description: Domain name content support on sale
              type: boolean
            verification:
              description: Whether the collection is validated
              type: boolean
            nftType:
              type: string
              nullable: true
            tick:
              description: Brc20 field
              type: string
              nullable: true
            limit:
              description: Brc20 field
              type: number
              nullable: true
            amount:
              description: Brc20 field
              type: number
              nullable: true
            unitPrice:
              description: Brc20 field
              type: number
              nullable: true
            collectionId:
              description: Collection field
              type: string
              nullable: true
            contentType:
              description: Collection field
              type: string
              nullable: true
            contentBody:
              description: Collection field
              type: string
              nullable: true
            collectionItemName:
              description: Collection field
              type: string
              nullable: true
            collectionHighResImgUrl:
              description: Collection field
              type: string
              nullable: true
            collectionName:
              description: Collection field
              type: string
              nullable: true
            notOnSale:
              description: Collection field
              type: boolean
              nullable: true
            domain:
              description: Domain field
              type: string
              nullable: true
            domainHex:
              description: Domain field
              type: string
              nullable: true
            domainType:
              enum:
                - sats
                - unisat
                - btc
                - xbt
                - ord
                - gm
                - bitmap
                - x
                - null
              description: Domain field
              type: string
              nullable: true
            utxo:
              description: The UTXO where the inscription is located
              type: object
              properties: {}
              additionalProperties: false
          additionalProperties: false
      required:
        - msg
        - code
        - data
    MarketInscriptionInfoListRequest:
      type: object
      properties:
        address:
          type: string
        inscriptionIds:
          type: array
          items:
            type: string
      additionalProperties: false
    MarketInscriptionInfoListResponse:
      type: object
      properties:
        code:
          type: number
        msg:
          type: string
        data:
          required:
            - list
          type: object
          properties:
            list:
              type: array
              items:
                required:
                  - inscriptionId
                type: object
                properties:
                  auctionId:
                    type: string
                    nullable: true
                  inscriptionId:
                    type: string
                  inscriptionNumber:
                    type: number
                    nullable: true
                  marketType:
                    type: string
                    nullable: true
                  address:
                    type: string
                    nullable: true
                  price:
                    type: number
                    nullable: true
                  nftType:
                    type: string
                    nullable: true
                  status:
                    type: string
                additionalProperties: false
          additionalProperties: false
      required:
        - msg
        - code
        - data
    MarketCreatePutOnRequest:
      required:
        - inscriptionId
        - initPrice
        - unitPrice
        - pubkey
        - marketType
      type: object
      properties:
        nftType:
          type: string
        inscriptionId:
          type: string
        initPrice:
          description: Set the initial total price
          type: string
        unitPrice:
          description: Unit Price (for tick)
          type: string
        pubkey:
          description: User public key
          type: string
        marketType:
          enum:
            - auction
            - fixedPrice
          type: string
          example: fixedPrice
        # auctionTime:
        #   description: Auction mode optional, setting time of the order
        #   type: number
        # maxPrice:
        #   description: Auction mode optional, setting max price of the order
        #   type: string
        btcAddress:
          description: (Optional) Only for multi-address wallet, such as Xverse, hiro. Specifies the BTC receive address
          type: string
      additionalProperties: false
    MarketCreatePutOnResponse:
      type: object
      properties:
        code:
          type: number
        msg:
          type: string
        data:
          required:
            - auctionId
            - psbt
            - signIndexes
          type: object
          properties:
            auctionId:
              type: string
            psbt:
              type: string
            signIndexes:
              description: Specifies the signature location used by the xverse wallet
              type: array
              items:
                type: number
          additionalProperties: false
      required:
        - msg
        - code
        - data
    MarketConfirmPutOnRequest:
      required:
        - auctionId
        - psbt
      type: object
      properties:
        auctionId:
          type: string
        psbt:
          type: string
        fromBase64:
          description: Is Base64 format, the default is hex format
          type: boolean
      additionalProperties: false
    MarketConfirmPutOnResponse:
      type: object
      properties:
        code:
          type: number
        msg:
          type: string
        data:
          type: object
          properties: {}
          additionalProperties: false
      required:
        - msg
        - code
        - data
    MarketCreateBidPrepareRequest:
      required:
        - auctionId
        - bidPrice
        - address
        - pubkey
      type: object
      properties:
        auctionId:
          type: string
        bidPrice:
          type: number
        address:
          description: Bidder address
          type: string
        pubkey:
          description: Bidder pubkey
          type: string
      additionalProperties: false
    MarketCreateBidPrepareResponse:
      type: object
      properties:
        code:
          type: number
        msg:
          type: string
        data:
          type: object
          properties:
            serverFee:
              description: Expected service fee.
              type: number
            serverReal:
              description: Real service fee.
              type: number
            serverFeeRate:
              description: Real service fee rate.
              type: number
            txSize:
              description: Estimated transaction size
              type: number
            nftValue:
              description: Satoshis carried by the inscription
              type: number
            feeRate:
              description: Network fee rate
              type: number
            availableBalance:
              description: Available confirmed balance for the user
              type: number
            allBalance:
              description: Available total balance for the user
              type: number
          additionalProperties: false
      required:
        - msg
        - code
        - data
    MarketCreateBidRequest:
      required:
        - auctionId
        - bidPrice
        - address
        - pubkey
      type: object
      properties:
        auctionId:
          type: string
        bidPrice:
          type: number
        address:
          description: Bidder address
          type: string
        pubkey:
          description: Bidder pubkey
          type: string
        feeRate:
          description: The user sets the rate
          type: number
        nftAddress:
          description: (Optional) Only for multi-address wallet, such as Xverse, hiro. Inscription receiving address
          type: string
        utxos:
          description: Custom utxo
          type: array
          items:
            type: object
            properties:
              txid:
                type: string
              index:
                type: number
      additionalProperties: false
    MarketCreateBidResponse:
      type: object
      properties:
        code:
          type: number
        msg:
          type: string
        data:
          required:
            - bidId
            - psbtBid
            - serverFee
            - networkFee
            - feeRate
            - nftValue
          type: object
          properties:
            bidId:
              type: string
            psbtBid:
              description: Bid psbt
              type: string
            psbtBid2:
              description: Auction mode is used, and the current empty string can be passed
              type: string
            psbtSettle:
              description: Auction mode is used, and the current empty string can be passed
              type: string
            serverFee:
              description: The service fee charged by the platform
              type: number
            networkFee:
              description: BTC network total fee
              type: number
            feeRate:
              description: BTC network fee rate
              type: number
            nftValue:
              type: number
            bidSignIndexes:
              description: Specifies the bid signature location used by the xverse wallet
              type: array
              items:
                type: number
          additionalProperties: false
      required:
        - msg
        - code
        - data
    MarketConfirmBidRequest:
      required:
        - auctionId
        - bidId
        - psbtBid
      type: object
      properties:
        auctionId:
          type: string
        bidId:
          type: string
        psbtBid:
          type: string
        psbtBid2:
          description: Auction mode is used, and the current empty string can be passed
          type: string
        psbtSettle:
          description: Auction mode is used, and the current empty string can be passed
          type: string
        fromBase64:
          description: Is Base64 format, the default is hex format
          type: boolean
      additionalProperties: false
    MarketConfirmBidResponse:
      type: object
      properties:
        code:
          type: number
        msg:
          type: string
        data:
          required:
            - txid
          type: object
          properties:
            txid:
              description: Transaction txid
              type: string
          additionalProperties: false
      required:
        - msg
        - code
        - data
    MarketCreatePutOffRequest:
      required:
        - auctionId
      type: object
      properties:
        auctionId:
          type: string
        nftAddress:
          description: (Optional) Only for multi-address wallet, such as Xverse, hiro. Inscription receiving address.
          type: string
        btcPubkey:
          description: (Optional) Only for multi-address wallet, such as Xverse, hiro. The public key used in the inscription of the order.
          type: string
        utxos:
          description: Custom utxo
          type: array
          items:
            type: object
            properties:
              txid:
                type: string
              index:
                type: number
        rbf:
          type: boolean
        offChain:
          type: boolean
      additionalProperties: false
    MarketCreatePutOffResponse:
      type: object
      properties:
        code:
          type: number
        msg:
          type: string
        data:
          required:
            - psbt
          type: object
          properties:
            psbt:
              type: string
            txSize:
              type: number
            btcSignIndexes:
              description: Specifies the btc signature location used by the xverse wallet
              type: array
              items:
                type: number
            nftSignIndexes:
              description: Specifies the nft signature location used by the xverse wallet
              type: array
              items:
                type: number
          additionalProperties: false
      required:
        - msg
        - code
        - data
    MarketConfirmPutOffRequest:
      required:
        - auctionId
        - psbt
      type: object
      properties:
        auctionId:
          type: string
        psbt:
          type: string
        fromBase64:
          description: Is Base64 format, the default is hex format
          type: boolean
        offChain:
          type: boolean
      additionalProperties: false
    MarketConfirmPutOffResponse:
      type: object
      properties:
        code:
          type: number
        msg:
          type: string
        data:
          required:
            - txid
          type: object
          properties:
            txid:
              type: string
          additionalProperties: false
      required:
        - msg
        - code
        - data
    MarketCreateModifyPriceRequest:
      required:
        - auctionId
        - initPrice
        - unitPrice
      type: object
      properties:
        auctionId:
          type: string
        initPrice:
          type: string
        unitPrice:
          type: string
      additionalProperties: false
    MarketCreateModifyPriceResponse:
      type: object
      properties:
        code:
          type: number
        msg:
          type: string
        data:
          required:
            - psbt
            - signIndexes
          type: object
          properties:
            psbt:
              type: string
            signIndexes:
              description: Specifies the signature location used by the xverse wallet
              type: array
              items:
                type: number
          additionalProperties: false
      required:
        - msg
        - code
        - data
    MarketConfirmModifyPriceRequest:
      required:
        - auctionId
        - psbt
        - fromBase64
      type: object
      properties:
        auctionId:
          type: string
        psbt:
          type: string
        fromBase64:
          type: boolean
      additionalProperties: false
    MarketConfirmModifyPriceResponse:
      type: object
      properties:
        code:
          type: number
        msg:
          type: string
        data:
          type: object
          properties: {}
          additionalProperties: false
      required:
        - msg
        - code
        - data
    MarketCreateBatchPutOnRequest:
      required:
        - unitPrice
        - pubkey
      type: object
      properties:
        unitPrice:
          description: Unit Price (for tick)
          type: string
        pubkey:
          description: User public key
          type: string
        nftType:
          type: string
        btcAddress:
          description: (Optional) Only for multi-address wallet, such as Xverse, hiro. Specifies the BTC receive address
          type: string
        utxos:
          description: Custom utxo
          type: array
          items:
            type: object
            properties:
              txid:
                type: string
              index:
                type: number
      additionalProperties: false
    MarketCreateBatchPutOnResponse:
      type: object
      properties:
        code:
          type: number
        msg:
          type: string
        data:
          required:
            - auctionId
            - psbt
            - signIndexes
          type: object
          properties:
            batchAuctionId:
              type: string
            psbt:
              type: string
            signIndexes:
              description: Specifies the signature location used by the xverse wallet
              type: array
              items:
                type: number
          additionalProperties: false
      required:
        - msg
        - code
        - data
    MarketConfirmBatchPutOnRequest:
      required:
        - batchAuctionId
        - psbt
      type: object
      properties:
        batchAuctionId:
          type: string
        psbt:
          type: string
        fromBase64:
          description: Is Base64 format, the default is hex format
          type: boolean
      additionalProperties: false
    MarketConfirmBatchPutOnResponse:
      type: object
      properties:
        code:
          type: number
        msg:
          type: string
        data:
          type: object
          properties: {}
          additionalProperties: false
      required:
        - msg
        - code
        - data
    MarketCreateBatchBidPrepareRequest:
      required:
        - auctionIds
        - address
        - pubkey
      type: object
      properties:
        auctionIds:
          type: array
          items:
            type: string
        address:
          description: Bidder address
          type: string
        pubkey:
          description: Bidder pubkey
          type: string
      additionalProperties: false
    MarketCreateBatchBidPrepareResponse:
      type: object
      properties:
        code:
          type: number
        msg:
          type: string
        data:
          type: object
          properties:
            serverFee:
              description: Expected service fee.
              type: number
            serverReal:
              description: Real service fee.
              type: number
            serverFeeRate:
              description: Real service fee rate.
              type: number
            txSize:
              description: Estimated transaction size
              type: number
            feeRate:
              description: Network fee rate
              type: number
            availableBalance:
              description: Available confirmed balance for the user
              type: number
            validAuctionIds:
              type: array
              items:
                type: string
            invalidAuctionIds:
              type: array
              items:
                type: string
          additionalProperties: false
      required:
        - msg
        - code
        - data
    MarketCreateBatchBidRequest:
      required:
        - auctionIds
        - bidPrices
        - address
        - pubkey
      type: object
      properties:
        auctionIds:
          type: array
          items:
            type: string
        bidPrices:
          type: array
          items:
            type: number
        address:
          description: Bidder address
          type: string
        pubkey:
          description: Bidder pubkey
          type: string
        feeRate:
          description: The user sets the rate
          type: number
        nftAddress:
          description: (Optional) Only for multi-address wallet, such as Xverse, hiro. Inscription receiving address
          type: string
      additionalProperties: false
    MarketCreateBatchBidResponse:
      type: object
      properties:
        code:
          type: number
        msg:
          type: string
        data:
          required:
            - bidId
            - psbtBid
            - serverFee
            - networkFee
            - feeRate
            - bidSignIndexes
          type: object
          properties:
            bidId:
              type: string
            psbtBid:
              description: Bid psbt
              type: string
            serverFee:
              description: The service fee charged by the platform
              type: number
            networkFee:
              description: BTC network total fee
              type: number
            feeRate:
              description: BTC network fee rate
              type: number
            bidSignIndexes:
              description: Specifies the bid signature location used by the xverse wallet
              type: array
              items:
                type: number
          additionalProperties: false
      required:
        - msg
        - code
        - data
    MarketConfirmBatchBidRequest:
      required:
        - bidId
        - psbtBid
      type: object
      properties:
        bidId:
          type: string
        psbtBid:
          type: string
        fromBase64:
          description: Is Base64 format, the default is hex format
          type: boolean
      additionalProperties: false
    MarketConfirmBatchBidResponse:
      type: object
      properties:
        code:
          type: number
        msg:
          type: string
        data:
          required:
            - txid
          type: object
          properties:
            txid:
              description: Transaction txid
              type: string
          additionalProperties: false
      required:
        - msg
        - code
        - data
    FractalSupply:
      type: object
      properties:
        blocks:
          type: number
        supply:
          type: number
    AddressBalance:
      type: array
      items:
        properties:
          address:
            type: string
          balance:
            type: number

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
